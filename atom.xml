<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Enoch2090</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://enoch2090.github.io/"/>
  <updated>2020-02-19T09:13:16.843Z</updated>
  <id>https://enoch2090.github.io/</id>
  
  <author>
    <name>Phillip Gu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>半自动地给 PDF 添加目录</title>
    <link href="https://enoch2090.github.io/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.html"/>
    <id>https://enoch2090.github.io/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.html</id>
    <published>2020-02-18T16:00:00.000Z</published>
    <updated>2020-02-19T09:13:16.843Z</updated>
    
    <content type="html"><![CDATA[<p>什么东西比一个 PDF 文档更惹人烦？一个没有目录的 PDF 文档。</p><p>没有目录的原因很多。可能是在文档传播的过程中被导出丢失了，也可能就是那个作者，明明知晓那么多 LaTeX 的技巧，但就是懒得多动一下手指方便读者。</p><p>我们只能自己给文档加目录了。</p><p>要做到这件事，我们需要一个免费的小工具：PdgCntEditor。然后，为了省事，我们还需要一小段脚本来快速修整格式。我把这两样东西打包准备好了，你可以<a href="https://enoch2090.github.io/downloads/tools/PDF-Menu.zip">点击下载</a>。| <a href="https://d.pr/f/9hG5B2" target="_blank" rel="noopener">备用地址</a></p><p>这个工具只有 Windows 下有，macOS下我暂时还没找到替代品。因此，你还需要一个虚拟机/双系统。</p><p>首先，打开你要添加目录的 PDF，找到它正文里的目录。如果连这个也没有，或者你看的 PDF 是扫描版，那还是放弃吧。把正文里的目录复制下来，粘贴到 Drafts 里。</p><p>PdgCntEditor 对于批量添加目录的格式要求是：</p><ol><li>目录的标题和对应的页码之间用制表符（Tab）隔开。</li><li>多个标题之间换行隔开。</li><li>有多层级的标题时，在标题前面加额外的制表符表示层级的缩进。</li></ol><p><img src="/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.htm/%E7%B2%98%E8%B4%B4%E5%88%B0%20Drafts.png" alt="粘贴到 Drafts"></p><p>可以看到，从 PDF 里复制出来的内容可以说惨不忍睹，完全不符合 PdgCntEditor 的格式要求。我手动修改了其中的前几行。我们需要把整个目录八百多行全改成这个样子，才能批量添加成功。</p><p>这时候，我们需要一小段脚本来帮助我们完成这项工作。安装压缩包里附的 Drafts 动作，然后对这个草稿运行。我们会得到：</p><p><img src="/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.htm/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="运行结果"></p><p>可以看到，现在的格式都正确了。图中有些页码看起来被换行了，但实际上那是一个制表符。确认这一点的方法是把光标移到有问题的地方，按方向键向前移动一次光标。如果光标回到了上一行最后一个字母的右边，那就表明这里是一个换行。但如果光标移动到了上一行最后一个字母的左边，则说明这里没有换行，只是显示问题。</p><p>当然，你得到的很可能和我的结果不一样——因为这个动作只是我针对我面前的这份文档复制出来的目录所写的。如果你懂正则表达式，你可以自己根据问题改写一下。否则……也许我以后会写一个更通用的动作也说不定。</p><p>运行完动作之后，你还是需要手工修整一下。有些地方是复制出来时就有的错误，光靠正则表达式不能去除。</p><p><img src="/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.htm/%E9%94%99%E8%AF%AF-2102938.png" alt="错误"></p><p>完成以后，让我们在 PdgCntEditor 中打开待添加目录的文档。首先把修整好的目录文本粘贴进主界面，然后点击右上角的 PDF 文档图标：</p><p><img src="/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.htm/%E4%BD%BF%E7%94%A8PdgCntEditor.png" alt="使用PdgCntEditor"></p><p>在这里，我们需要为这个目录设定基准页。基准页很好确定：用预览（或者其它 PDF 阅读器）打开该文档，找到待生成的目录中第一章的第一页，它所在的页码就是基准页。</p><p><img src="/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.htm/%E5%AF%BB%E6%89%BE%E5%9F%BA%E5%87%86%E9%A1%B5.png" alt="寻找基准页"></p><p>填入基准页，确认，然后按保存即可。</p><p><img src="/2020/02/19/%E6%95%88%E7%8E%87/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%9C%B0%20PDF%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95.htm/Done.png" alt="Done"></p><p>这时再打开文档，就可以看到目录了。</p><p>你可以在<a href="https://enoch2090.github.io/downloads/docs/ProbabilityandStatisticsTheScienceofUncertainty.pdf">这里</a>下载到我用的示例文档。</p><p>最后提醒一句：在目录文本的标题里不要用制表符，否则生成出来的目录会出错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;什么东西比一个 PDF 文档更惹人烦？一个没有目录的 PDF 文档。&lt;/p&gt;
&lt;p&gt;没有目录的原因很多。可能是在文档传播的过程中被导出丢失了，也可能就是那个作者，明明知晓那么多 LaTeX 的技巧，但就是懒得多动一下手指方便读者。&lt;/p&gt;
&lt;p&gt;我们只能自己给文档加目录了。
      
    
    </summary>
    
    
    
      <category term="Drafts" scheme="https://enoch2090.github.io/tags/drafts/"/>
    
      <category term="效率" scheme="https://enoch2090.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="macOS" scheme="https://enoch2090.github.io/tags/macOS/"/>
    
      <category term="自动化" scheme="https://enoch2090.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>硬币 | 柏林故事</title>
    <link href="https://enoch2090.github.io/2020/02/17/%E6%96%87%E5%8C%96/%E7%A1%AC%E5%B8%81%20|%20%E6%9F%8F%E6%9E%97%E6%95%85%E4%BA%8B.html"/>
    <id>https://enoch2090.github.io/2020/02/17/%E6%96%87%E5%8C%96/%E7%A1%AC%E5%B8%81%20|%20%E6%9F%8F%E6%9E%97%E6%95%85%E4%BA%8B.html</id>
    <published>2020-02-16T16:00:00.000Z</published>
    <updated>2020-02-17T10:57:15.651Z</updated>
    
    <content type="html"><![CDATA[<p>严格来说，这不是一个完整的故事，也不全部发生在柏林。但既然它是我柏林之行的附属品，那我就写在一起了。</p><p>自从抵达欧洲开始，我就发现，自己最是和硬币过不去。</p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>不知道你有没有在景点见过那种压硬币的机器：选好图案，塞一块钱进去，再塞一个几分钱的小硬币，然后使劲摇把手。三五圈后，叮当一声，机器吐出被压扁的小硬币，上面压上了你选的图案。</p><p>这种机器在好多地方都有。柏林有，布拉格有，我在墨尔本也见过。仔细想来，一个地方要有这个东西，最首要的条件就是：当地货币里面的某个硬币，要符合大小并且是铜制的。而且对应的面额得小，用来压了不会很亏。所以德国有，匈牙利也有，但丹麦就没有。</p><p><em>布达佩斯，布达城堡门前。</em> 我翻遍了口袋，也找不到面前的机器需要的一枚五弗林。说实话，落地到现在，我就没见过这个面值的硬币。</p><p>环顾四周，不远处有一个小哥在买旅游套票。我跑过去问他：你有五弗林吗？我想和你换几个。</p><p>我找找看啊。他摸索了一阵，从钱包的夹缝里翻出来一个。他把那枚硬币给我：别换了，送你了。反正我也用不上。</p><p>我想想也是，超市里所有东西都是以 0 结尾的，五弗林确实只能拿来压了。那些压硬币的机器，它们收下五十或一百弗林，然后接连不断地处理掉本地人弃若敝屣的五弗林。</p><p>就是不知道造币厂的人是不是很痛恨它们？每年价值这台机器收入二十分之一的硬币在这里被转化，获得了一些图案，失去了一些价值。</p><p>叮当，我的硬币被压上了一个布达城堡。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p><em>柏林，康德街，地下。</em> 我被公共厕所门口的收费机拦住了去路，因为这台机器只收五十分，唯一一种我口袋里正好没有的欧元硬币。厕所里面坐着一个清洁工，正在用一脸怀疑的眼神看着我。</p><p>有个人刚从里面出来，正在慢条斯理地洗手。我等他洗完，上去问他：你有五十分吗？我用一欧元和你换两个。</p><p>我怎么总是在和别人换硬币啊。</p><p>好的，你等下。他在钱包里一阵翻找，叮咣声此起彼伏，让人难以相信那是个普通容量的钱包。他小心翼翼地摸出一个五十分给我，好像生怕一不小心把它掉回下面那片深邃的铜镍海洋。随后叮咣声再次响起，等声音又停止的时候，他又给了我两个二十分。</p><p>我感觉这就差不多了，十分钱我实在是用不到。每天回到房间，第一件事就是把口袋里的硬币全倒出来扔在一边。所以我床头摆满了各种硬币，那都是找零给的。有时候我睡觉都担心这些硬币流下来把我给淹死。其中当然是一分和两分的最多，十分的位居第三。不要问我五分都去哪了。我计划离开柏林的时候，就把那堆小硬币留在那里，留给清洁工算了。</p><p>所以我赶紧制止这位好心人。我说，这些已经可以了，非常感谢您。</p><p>啊，别急。那位好心人虽然这么说，他看起来倒是急了。海浪此起彼伏的声音一下子加快，可能生怕追不上我。等声音停下来的时候，我发现我手上多了一大堆一分和两分的硬币。谢谢。那个人拍拍我的肩膀，一下子消失了。</p><p>我转头看向厕所里面，那个清洁工还在用一脸怀疑的眼神看着我。</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p><em>柏林，凯瑟琳-奥古斯都街，Deutch Post 门外。</em></p><p>我走出邮局，深吸了一口气。终于弄完了。</p><p>为了寄几张明信片，我得先买邮票。门口的自动邮票机只收硬币——我必然没有。我昨天明明有个五十分的，鬼知道它现在跑哪去了。我四处张望，邮局门口有个愁眉苦脸的老太太。年纪大的人往往都只说德语，找他们没有用。柜台前面排着长长的队，我想也没有必要排队上去换几个硬币，待会寄东西还要再排一次的。</p><p>我一边考虑一边掏出钱包，这才发现里面最小的面值是五十欧。我掏了掏外套口袋，里面叮叮当当全是景点压的纪念币，就是没有能用的硬币。</p><p>跑了好几条马路，我去便利店买了点东西，这才把手上的纸币找开。再一路小跑回来，在机器上按面值买完邮票，跑到柜台，柜员告诉我：你这是本地邮票。你直接把钱给我，我给你重新贴国际邮票。</p><p>那我跑好几条马路是为的什么啊？</p><p>Anyway，当我走出邮局的时候，我突然发现那个老太太还在那。她招手叫我过去，对着我说了一通德语，一脸哭腔指着地上。我低头一看：是一个阴井盖。是她的钱包掉进去了吗？</p><p>我凑上去看，井盖下面有一个金色的硬币。</p><p>「Fünfzig?」我问她。德语的五十。</p><p>她点了点头。</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>如果你买那种按压式的护肤品、沐浴露之类，买来的时候，那个按压头肯定是锁住的。不然在路上，它可能就自己流出来了。有些包装会在按压头里面做内螺纹，把它拧住；还有些包装用的是一个额外的卡扣，把按压头给卡死。</p><p>比如我手上的这瓶护肤霜。</p><p><em>柏林，夏天街，Econtel 酒店。</em></p><p>我已经把东西全收拾好了，就差手上这瓶护肤霜还没塞进箱子里。火车还有不到一小时就到，我必须马上出门。</p><p>但是这瓶东西的卡扣去哪了？</p><p>我不希望自己下次打开箱子的时候，看到里面全是流出来的护肤霜。我也依稀记得，这瓶东西刚买来的时候，我考虑到将来要装箱子，特意把那个卡扣留下来了。应该是放在写字台上了，但现在它并不在那里。</p><p>要赶不上火车了。我蹲下来检查了一遍地上，还有角落里——全都没有。可能是清洁工打扫的时候给扔了。</p><p>我还有五十五分钟。从打车到抵达火车站至少要三十五分钟，而且还要找站台。</p><p>得找点别的什么东西替代。只要差不多尺寸的小东西，硬质的，能正好卡在这个按压头下面就行。但是我所有的东西都收进箱子里了，我没时间一一翻出来。</p><p>等等。也不是所有东西。</p><p>我看向床头那一滩硬币。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>所以我开头说，到了欧洲发现自己最是和硬币过不去。有的硬币有人要，有的硬币没人要。但到了我这，总是需要的时候没有，不需要的时候嫌多。来来回回一个月，总算是有一回，需要的时候派上点用处了。</p><p>Leider, nicht sein Geldwert.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;严格来说，这不是一个完整的故事，也不全部发生在柏林。但既然它是我柏林之行的附属品，那我就写在一起了。&lt;/p&gt;
&lt;p&gt;自从抵达欧洲开始，我就发现，自己最是和硬币过不去。&lt;/p&gt;
&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
    
      <category term="旅行" scheme="https://enoch2090.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>捐款 | 柏林故事</title>
    <link href="https://enoch2090.github.io/2020/01/28/%E6%96%87%E5%8C%96/%E6%8D%90%E6%AC%BE%20|%20%E6%9F%8F%E6%9E%97%E6%95%85%E4%BA%8B.html"/>
    <id>https://enoch2090.github.io/2020/01/28/%E6%96%87%E5%8C%96/%E6%8D%90%E6%AC%BE%20|%20%E6%9F%8F%E6%9E%97%E6%95%85%E4%BA%8B.html</id>
    <published>2020-01-27T23:00:00.000Z</published>
    <updated>2020-01-28T20:15:27.287Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>和朋友走到勃兰登堡门广场的时候，我忍不住回头又看了一眼背后的建筑。顶层的雕像覆盖着发白的铜绿，令人无法不厌倦这个潮湿的冬天。</p><p>回过神的时候，面前已经站了一个人。一个外表很平凡的女人，大约是中东移民，穿着很朴素的衣服，拿着一张破破烂烂的纸，冲我说着蹩脚的德语。不管她是在试图推销什么东西，还是想让我参与什么活动，我都对此不感兴趣，所以我摆了摆手想回头走开。然而她又缠了上来，这回改说更蹩脚的英语：你好，你能在这签个名吗？</p><p>我扫了一眼她手上的纸，是某种请愿之类的表格。我大概是一时半会走不掉了，签个名也没什么损失。我接过一支破破烂烂的圆珠笔，一边思忖着要不要从包里拿一支好点的笔出来，一边考虑着编个什么乱七八糟的名字签上去。笔尖磨磨蹭蹭不肯出水，刮拉着挪到行末，那里有一个令人不安的词语——Donation。我又打量了一眼这张纸，低劣的复印质量让人对行末那个词语生起疑惑。这事情不靠谱。要是有多的硬币，我宁可全部给倚在勃兰登堡门下的那个流浪汉，给他的德牧买点好的狗粮，我也不会给这个一看就是骗子的人。</p><p>「我是游客，我身上没钱。」我试图装出迷惑的样子，「早上刚到柏林。抱歉。」</p><p>「那这是什么？」她伸手指指我的裤子口袋，左边鼓起来一块——可惜我的钱包在背包里，那只是一副耳机。我掏出来展示给她看，「这只是个耳机。你接受信用卡捐赠吗？你有没有 POS 机？不行？那对不起，我也没办法……」</p><p>她白了我一眼，骂骂咧咧地走开了。我看着她拿着那支不肯出水的圆珠笔，费力地试图把我煞费苦心编出来的签名划掉。</p><p>等我转过头，我发现我朋友已经给另一个明显是一伙的人捐了十块钱，那人转眼就消失无影无踪。「我是想给个硬币打发她的，然后她说最少要捐十欧。」他无奈地解释，「他妈的，我一掏出钱包那人就盯上我里面的钱了。」</p><p>我摇摇头，摸了摸口袋里的耳机。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>我的室友照计划要和他的朋友经过柏林，并待上三天。我上午有课，就约好下午去找他们玩。</p><p>中午的时候室友发来消息：他们有人被抢了。</p><p>故事是这样的。他们从国会大厦一路走到勃兰登堡门，结果被几个要捐款的跟上了。他们有个人已经掏出钱包准备捐钱了，却及时被大家劝住。那个老哥于是收起钱包继续走，要捐款的那伙人就追上来继续缠着他不放，几秒种后突然全跑了。又过了五秒，那老哥才意识到：原来钱包被抢了。钱包里放了好几百欧元，还有信用卡、身份证等一堆东西。</p><p>说是抢其实言过其实，说是被偷可能更符合实情一点。Anyway，那伙人几乎是瞬间消失在某个店面附近，从此再也寻不到踪迹。他们于是继续向前走，同时报了警。没走多远，他们又看到了几个类似的要捐款的，于是用单反悄悄拍下了其中几个人的脸。</p><p>那个老哥在警察局做了一下午的笔录。我室友拿出拍的照片给警察看，警察说：这几个人啊，她们在办公室墙上挂着呢！于是他们又花了不少时间依次指认嫌疑犯的照片。警察告诉他们，这伙人被怀疑诈骗了很久，始终没有证据。现在倒是有了，不过不见得抓得到人。</p><p>那个价值连城的钱包，十有八九是找不回来了。我给他们讲了我前些天的经历——看来遇到这种事情，暴露出你的钱包不太明智。</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>查理检查站所在的街角立着一块白底黑字的牌子，上面用多种语言写着：「你正在进入美国管辖区域，禁止在没有许可的情况下携带武器；请遵守交通规则。」</p><p>我走到警示牌下面，几个美国人从我旁边路过。我隐约听到其中一个在开玩笑：「……这里写着你正在进入美国管辖区域。很好笑的是，当你进入美国区域的时候——」他抬手指着马路对面，「你首先看到的是一家麦当劳。」</p><p>我顺着他的目光看过去，却突然发现有个人拦在我面前。似曾相识的一幕：中东移民，拿着一张破破烂烂的纸，冲我说着蹩脚的德语。这回是个年纪大一些的老太太，我感觉她身上的钱搞不好比我要多。我把手插进口袋，按紧了口袋里的钱包和手机，冲她摇了摇头。</p><p>那个老太太立马切换到蹩脚的英语，签满倒霉游客名字的表格几乎要戳到我脸上了。我回忆了最后一次背上包的情景，印象里所有拉链都拉紧了，而且都在一边上，不容易一下子弄开。是在左边还是右边？这我不太记得了，我习惯上是从右边拿东西，那应该是右边……</p><p>那没事了，我就不信你抢得到我的东西。</p><p>「不好意思，我不知道你在说什么。」我直接说起中文，假装听不懂她的蹩脚英文。来啊，我就不信你还会中文。</p><p>她确实不会中文，于是开始给我比划要我去签名。一支似曾相识的圆珠笔反反复复指着表格里 Donation 那一栏，我想那支笔大概也写是不出来的。我继续装傻，开始用中文问她是不是迷路了。</p><p>三十秒后，她放弃了尝试，扭头就走。</p><p>我目送这个人走开。她直接横穿马路，和不远处另一个人说了句话，然后走向了下一个目标。我等了个红灯跟到马路对面，那里是查理检查站博物馆的纪念品店。在我成功走进去之前，又有两个人跑来问我要捐款。我把背包束带拉紧，一路装傻，总算冲出了包围圈。</p><p>纪念品商店的橱窗一尘不染，里面人不多，自然也不会有爱心人士跟进来。我先拿了一张宣传单，然后走到橱窗边上，假装在看窗边那一排劣质的纪念品：柏林墙的残片。东西应该不假，但上面的颜料一看就是新刷上去的；制作的工人很有可能不会用热熔胶胶枪，底座上有一团刺眼的热熔胶暴露在外面。我拿起一块残片，一遍端详一遍瞟向外面，街道上的情景让人想到夏天隔着纱窗向外看的模样：一群白蚁铺天盖地在飞，在纠缠着路人。</p><p>我拿出手机，拨通了报警电话。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这并不是这个故事的结尾，因为接电话的警察不会说英语，而我只会用德语说「我不会说德语」。等我和他的拉锯战以我失去耐心并挂断电话而结束的时候，我发现那群人早就不见了。</p><p>怎么说呢？这就是结尾了。也许我下次遇到她们，接电话的警察会是个懂英语的人。但既然这群人还在外面游荡，大家在柏林的时候就还是保持警惕吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;和朋友走到勃兰登堡门广场的时候，我忍不住回头又看了一眼背后的建筑。顶层的雕像覆盖着发白的铜绿，令人无法不厌倦这个潮湿的冬天。&lt;/p&gt;
&lt;p&gt;回过神的
      
    
    </summary>
    
    
    
      <category term="旅行" scheme="https://enoch2090.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>人类最后的堡垒 | 人类电影精华欣赏</title>
    <link href="https://enoch2090.github.io/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F.html"/>
    <id>https://enoch2090.github.io/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F.html</id>
    <published>2019-09-04T16:00:00.000Z</published>
    <updated>2019-12-31T04:05:36.292Z</updated>
    
    <content type="html"><![CDATA[<p>很久没有开寝室电影欣赏大会了，恰巧军训有一天晚上我们几个都「感冒」请了假，于是计划着开始欣赏《上海堡垒》。看这个片子之前我们万万没想到，能有这种比《逐梦演艺圈》还需要快进键的电影。<br>以下使用名字缩写来表示每个人的发言。whc 今天好像是真感冒了，所以只好听我们谐。zhc 来自台湾，为了保持他原话的风味我会用繁体字表示他的吐槽。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0001.png" alt><br>lsq：哇暂停，他这个敬礼是啥玩意啊？<br>gyc：这不是敬礼，是在谢罪。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0003.png" alt><br>电影：「……把捕食者赶出陆家嘴！」<br>gyc：对对，赶到闵大荒，那里的人命不值钱。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0007.png" alt><br><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0009.png" alt></p><p>操作员在键盘上一通敲打，启动了某个系统。<br>lsq：暂停暂停，他的键盘什么鬼？<br>gyc：我看看 …… md 他用的是 OEM 高度键帽吧，一看就是最垃圾的那种。<br>lsq：等下他按了什么？你回放一下。<br>（一通回放操作）<br>（三人一起）：T……Y……上？他按了一下上方向键就好了？就启动了？啊？</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0010.png" alt></p><p>主角之一在盯着显示器看，显示器上是侵略者聚集在防护罩外围的画面。<br>gyc：等等这个画面他是怎么得到的？他的摄像机在哪？<br>zhc：好問題。<br>其实这个画面前一秒刚出现过，明显就是省成本的时候没动脑子。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0012.png" alt></p><p>操作员在启动上海大炮，画面在一个不断有代码滚动的屏幕上一闪而过。<br>lsq：不是这……哈哈哈这怎么还现场写代码！<br>lsq：暂停一下，看看左边是啥啊。<br>（三人一通研究）<br>lsq：build？police doc？<br>zhc：screen shot？<br>gyc：search_data……sample clip……<br>lsq：platforms_data……<br>gyc：哎直接看代码直接看代码。init Main……我靠 <code>Main System.cpp</code> ？<br>（三人一起傻笑）<br>搞了半天这么先进一玩意原来还是 C++ 驱动的啊。我们后来还仔细读了读代码，写得有模有样的，只不过语法根本不是 C++。</p><p>上海大炮启动了，从江底缓缓升起。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0013.png" alt><br><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0014.png" alt><br><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0015.png" alt></p><p>zhc：哦喔，終於要出來了！<br>lsq：握草这大炮。<br>zhc：感覺和你想的不太一樣嗎。<br>lsq：这感觉有点菜……这口径不行。<br>gyc：草要什么口径啊，人家这肯定是能量武器啊。<br>lsq：那为什么要炮管？<br>沉默。<br>gyc：……好问题。<br>炮台完全升出水面。<br>zhc：哇這還挺大的。其實看起來還行。<br>lsq：这不可能收到黄浦江里面的啊。<br>gyc：人家可以挖河道的啊。<br>zhc：你把河道挖深就為了藏這個東西？<br>gyc：好傻逼啊。<br>zhc：不過你們上海是真的不好藏東西……誒這能垂直到九十度嗎？<br>gyc：那我没搞懂，为什么要藏起来啊？你就摆那儿不好吗？反正顶上有个罩子啊。</p><HR align="center" width="300" color="#987cb9" size="1">上海大炮向敌军母舰开火倒计时。「四……」lsq：喂他从里面射不会把这个（防护罩）打爆吗？「三……」上海大炮开始聚能。lsq：哇这太傻逼了吧，浪费了多少能量啊！上海大炮开火了。<p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0016.png" alt></p><p>（三人一起绝望地大叫）<br>zhc：啊——！<br>lsq：这什么智障爆炸啊！<br>gyc：这用 AE 随便画上去的吧！<br>（三人开始倒回去看特效）<br>zhc：五毛錢耶！啊到這邊都可以接受，停停停就是這裡，啊——！<br>（三人再次绝望地大叫）</p><p>画面切到女二的寝室。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0017.png" alt></p><p>gyc：这啥电脑……暂停看看。<br>lsq：ThinkPad，这就是个换了皮的 ThinkPad。你看这个键盘就知道是 ThinkPad了。<br>gyc：后面还有丹麦皇家曲奇。<br>zhc：軍人宿舍允許這麼多吃的？<br>gyc：我也想说……为什么我们军训就那么多要求？<br>（三人第三次一起绝望地大叫，虽然 zhc 根本不用参加军训）</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0019.png" alt><br><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0020.png" alt></p><p>背景播报：「危机解除。」<br>绍将军：「好，大家休息一下。」<br>gyc：好，大家休息一下！<br>lsq：休息！坐！<br>gyc：坐！<br>lsq：我现在就坐着呢……准备被子！<br>gyc：躺！<br>（军训梗）</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0023.png" alt></p><p>主角团队：「防护罩被外星人撤销了，怎么办？」<br>gyc：那当然是 Command - Shift - Z 啊。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0025.png" alt></p><p>主角内心 OS：「……那一刻我才意识到，守护上海的不是泡防御，不是大炮，也不是 AV28 和我们的无人机。真正的堡垒，是大家破釜沉舟的勇气。」<br>gyc：破釜沉舟的勇气？你们是想自己把上海先炸了吗？诶我们要是先把上海炸了，这样外星人就打不进来了。</p><p>画面再次给到江中升起的大炮。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0026.png" alt></p><p>gyc：还有多久……还有四十分钟，我们二十分钟内应该能结束。<br>zhc：難道敵人不應該直接一鍋端這個大炮嗎，一個能量打下來你擋都擋不住……哎這個能九十度發射嗎？（他还在纠结九十度）<br>gyc：不好说哦。诶要是不能九十度发射那母舰飞到他正上方，这大炮不就凉了吗？<br>zhc：對的呀。<br>lsq：你们看这里……让我往回倒一点……<br>画面闪过上海大炮的操作手，他正在一块键盘上操作。<br>gyc：先停一下，他这又是啥键盘？<br>lsq：雷蛇的。（继续往回倒）<br>lsq：你看这个大炮，首先它不能九十度发射。其次，你看他这个灯，因为它间距只能做这么小，说不定他只有这么大的一个模具（比划了三十厘米高）。<br>lsq：我严重怀疑这个大炮只有这么点大……这个像不像你键盘上的 RGB 灯？<br>gyc：不是，这个大炮只能沿着黄浦江的方向发射啊，往两边不会打到边上的楼吗？<br>（三人一起哀叹）<br>gyc：哎刚才那键盘真的是雷蛇的吗，你开玩笑还是当真？<br>lsq：长成这样，我看像。<br>我们又盯着大炮看了一会。<br>lsq：要我去设计，我肯定不会弄这么一个大炮。是我我就把东方明珠改造成上海大炮，你想想那多帅。首先形状就符合，然后充能的时候还有指示灯——百分之二十的时候第一个球亮，百分之五十的时候第二个球亮，百分之八十的时候第三个球亮，多好啊。<br>gyc：不错，你还解决了上海大炮不能九十度发射的问题。到时候立个牌子，「请飞到我正上方」。因为你这个大炮他妈的只能九十度发射，天才。</p><p>两军开战。<br><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0028.png" alt></p><p>gyc：草这个画面和《独立日》一模一样啊！还有这个飞机是什么鬼阵型啊，你后面开火不会打到前面的吗？</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0031.png" alt></p><p>gyc：他为什么坐在一个巨大的戴森电风扇里面？<br>lsq：你能不能稳重一点啊这个球！（开始星际老男孩）</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0030-7764877.png" alt></p><p>lsq：这不火车打毒爆吗！（继续星际老男孩）<br>zhc：為了蟲群！</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0036.png" alt></p><p>男主落地抄起榴弹枪一通连射。<br>lsq：这是雷神之锤玩家吧！你看这个榴弹枪的娴熟运用！</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0037.png" alt></p><p>gyc：这个秦王走位，我看是 PUBG 玩家……</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0042.png" alt="上海堡垒-0042"></p><p>五年后。<br>gyc：妈的你五年能修成这个样子？<br>战时对比图：<br><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/%E4%B8%8A%E6%B5%B7%E5%A0%A1%E5%9E%92-0039.png" alt></p><p>lsq：哎这不是那个吗！哎我觉得他抄了游戏 CG 啊？</p><p>后来他去查了，左手边最高的楼确实长得很像《半条命 2》里的盟军总部。</p><p><img src="/2019/09/05/%E6%96%87%E5%8C%96/%E4%BA%BA%E7%B1%BB%E6%9C%80%E5%90%8E%E7%9A%84%E5%A0%A1%E5%9E%92%20%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E%E6%AC%A3%E8%B5%8F/UNADJUSTEDNONRAW_thumb_1a20.jpg" alt="《半条命 2》 17 号城市"></p><p>不过这俩并不是完全一样，顶多是借鉴，也没法实锤。</p><p>吐槽归吐槽，说点正经的。<br>为什么我们觉得《上海堡垒》这部影片水准不够，原因是多方面的。充斥着廉价感的道具、服饰和布景，还有全程对不上口型的配音，这些因素已经被说烂了；幼稚而毫无逻辑的剧情更是让人难以直视。这些先置条件都差到一个令人难以置信的地步。<br>更为奇怪的是，这部电影采用的展开与编排，几乎就是上个世纪的产物——都 9102 年了，滕导还在试图讲一个英雄拯救世界的老套故事。新千禧年的电影，多是在讨论人对自我定位的迷茫。然后《上海堡垒》整了一出军人爱上上级的奇葩故事，看得我很迷茫。这和《逐梦》有点像，同样是奇怪得让人批评不下去。但《逐梦》比它要好一点，因为毕导终究是讲了一个完整的故事。可能他的手法很幼稚，也许他的故事很天真，但他是想讲清这个故事的。放在《上海堡垒》这，莫名其妙就开始了，匆匆忙忙就结束了。该撑时间的地方一秒带过，该带过的地方猛拖时间。<br>不要说《上海堡垒》代表着中国科幻元年的结束。这玩意不叫科幻，它都不配叫电影。</p><p>「人类电影精华欣赏」是我们寝室的一项传统活动。四个人都有空的时候，我们会一起找部豆瓣评分低于 3.0 的电影。把寝室的灯关上，坐下来吃吃东西，吐槽两句。上一期活动我们欣赏了毕导的旷世之作《逐梦演艺圈》。从这一期开始，我们还顺便把我们的吐槽录下来，并整理成文字。<br>很多时候我觉得，我们这个活动欣赏的不是电影，而是现代艺术。</p></HR>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久没有开寝室电影欣赏大会了，恰巧军训有一天晚上我们几个都「感冒」请了假，于是计划着开始欣赏《上海堡垒》。看这个片子之前我们万万没想到，能有这种比《逐梦演艺圈》还需要快进键的电影。&lt;br&gt;以下使用名字缩写来表示每个人的发言。whc 今天好像是真感冒了，所以只好听我们谐。zh
      
    
    </summary>
    
    
    
      <category term="影评" scheme="https://enoch2090.github.io/tags/%E5%BD%B1%E8%AF%84/"/>
    
      <category term="人类电影精华" scheme="https://enoch2090.github.io/tags/%E4%BA%BA%E7%B1%BB%E7%94%B5%E5%BD%B1%E7%B2%BE%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title>TouchBar 替代指南</title>
    <link href="https://enoch2090.github.io/2019/09/04/%E6%95%88%E7%8E%87/TouchBar%20%E6%9B%BF%E4%BB%A3%E6%8C%87%E5%8D%97.html"/>
    <id>https://enoch2090.github.io/2019/09/04/%E6%95%88%E7%8E%87/TouchBar%20%E6%9B%BF%E4%BB%A3%E6%8C%87%E5%8D%97.html</id>
    <published>2019-09-03T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:36.680Z</updated>
    
    <content type="html"><![CDATA[<p>虽然一直嫌弃 TouchBar 没用，但当我真的失去它的时候，我依然经历了相当一段时间的 cognitive malaise。<br>谁有会想到它有一天突然失灵了呢？整个右侧八分之七的区域全部没反应了，只剩下最左边的两个键可以用。想来想去，终究是回忆起来了：那天去工训做东西的时候拿出来调试过代码，不小心螺丝刀砸在上面过一次。明明表面看来没有问题，结果居然电路坏了。<br>令我头疼的事情，主要其实也就两样。因为我是坚定的快捷键使用者，TouchBar 对我来说意义只有：音量调节和亮度调节。这两件事情，在 macOS 上都没有对应的快捷键。从操作的逻辑来说，其实倒确实是 TouchBar 最适合完成「调节某个量」这个操作。手指放上去，滑动一下一次到位，不必像硬件按钮那样反复去按一个键来调节。<br>想要彻底模拟出 TouchBar 的手感是不可能的。作为代替，我找了两个方案：</p><h2 id="方案一：LaunchBar-直接设定音量和亮度"><a href="#方案一：LaunchBar-直接设定音量和亮度" class="headerlink" title="方案一：LaunchBar 直接设定音量和亮度"></a>方案一：LaunchBar 直接设定音量和亮度</h2><p>LaunchBar 自带音量调节的动作，可以快速把系统音量设置为 25%/50%/75%/100%。我在网上又找到一段 AppleScript，可以快速设置系统亮度。仿照前者做四个动作，分别设置亮度为 25%/50%/75%/100%，就可以用 LaunchBar 代替 TouchBar了——好巧不巧，两个都是「Bar」。<br>这个方案我用了约莫有一周，然后我就找到了更好的办法：</p><h2 id="方案二：用-Better-Touch-Tool-调整音量和亮度"><a href="#方案二：用-Better-Touch-Tool-调整音量和亮度" class="headerlink" title="方案二：用 Better Touch Tool 调整音量和亮度"></a>方案二：用 Better Touch Tool 调整音量和亮度</h2><p>Better Touch Tool 是公认最好的 TouchBar 优化工具之一。说起来很奇怪，在我的 TouchBar 仍然在世的时候，我从没好好用过 BTT；它一凉，BTT 反而派上用处了。但是 BTT 不仅可以调整 TouchBar，它还支持将触控板上的滑动动作映射为其它操作，并且可以附加修饰键防止误触——确实是我能找到的最好选择了。<br>这次我的方案是：把「三指上/下滑」+修饰键映射为音量/亮度的上升/下降。这是用 BTT 很容易实现的，也是最自然的。</p><h2 id="修理-TouchBar"><a href="#修理-TouchBar" class="headerlink" title="修理 TouchBar"></a>修理 TouchBar</h2><p>替代方案用归用，修总还是要修的，所以我还是预约了天才吧。他们并没有当场帮我修，不过我最后得到了一些重要的信息。<br>众所周知 TouchBar 其实是一小块触摸屏。但我不知道的是，这玩意是和键盘完全一体的，要换就要连带键盘一起换。但这样其实是有好处的，因为和它连在一起的不是普通的键盘……而是苹果的蝶式键盘。以我的 2018 款 15’ MBP  为例，它使用的三代蝶式键盘是有 4 年保修的。所以，只要这四年内出现连击、失灵等状况，你就可以去免费换一块键盘。这样，TouchBar 就顺便被换掉了。</p><p>所以结论是：<strong>如果你的 TouchBar 坏了，那你应该做的事情是赶快把键盘也用坏</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然一直嫌弃 TouchBar 没用，但当我真的失去它的时候，我依然经历了相当一段时间的 cognitive malaise。&lt;br&gt;谁有会想到它有一天突然失灵了呢？整个右侧八分之七的区域全部没反应了，只剩下最左边的两个键可以用。想来想去，终究是回忆起来了：那天去工训做东西
      
    
    </summary>
    
    
    
      <category term="效率" scheme="https://enoch2090.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="指南" scheme="https://enoch2090.github.io/tags/%E6%8C%87%E5%8D%97/"/>
    
      <category term="macOS" scheme="https://enoch2090.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>用 Launch Bar 打开 Clion</title>
    <link href="https://enoch2090.github.io/2019/08/03/%E6%95%88%E7%8E%87/%E7%94%A8%20Launch%20Bar%20%E6%89%93%E5%BC%80%20Clion.html"/>
    <id>https://enoch2090.github.io/2019/08/03/%E6%95%88%E7%8E%87/%E7%94%A8%20Launch%20Bar%20%E6%89%93%E5%BC%80%20Clion.html</id>
    <published>2019-08-02T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:48.086Z</updated>
    
    <content type="html"><![CDATA[<p>我一直用 XCode 调试 C++ 代码，直到前几天要写一个小组作业，XCode 开始和其他人用的 Clion 不甚兼容了。为了省事，我就临时改用了 Clion。<br>我用的是学校提供的 JetBrains 全家桶，然后遇到了一个问题：在 Launch Bar 里搜不到 Clion。<br>我研究了一下，造成这种情况的原因是： JetBrains 全家桶的应用虽然会显示在启动台里，但其实际路径不在<code>/Applications</code>目录下，所以没有被 LaunchBar 收录进 Index。解决办法是：在 LaunchBar 里把 Clion 添加到 Index。首先调出 LaunchBar，按 <code>⌘cmd-⌥option-I</code> 进入 Index 管理界面，然后找到 <code>Applications</code> 一项，并打开它的 <code>Options</code>：<br><img src="/2019/08/03/%E6%95%88%E7%8E%87/%E7%94%A8%20Launch%20Bar%20%E6%89%93%E5%BC%80%20Clion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-08-01%20%E4%B8%8B%E5%8D%885.29.52.png" alt><br>点击左下角的加号，找到 JetBrains 全家桶所在的文件夹，然后添加即可。<br><img src="/2019/08/03/%E6%95%88%E7%8E%87/%E7%94%A8%20Launch%20Bar%20%E6%89%93%E5%BC%80%20Clion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-08-01%20%E4%B8%8B%E5%8D%885.32.43.png" alt><br>一个快速锁定该文件夹位置的办法：在访达里搜索「Clion」找到其应用本体，然后拖动到文件选取器里，就会自动跳转到它所在的目录。<br>现在，在 LaunchBar 里调用 Clion 能正确打开了：<br><img src="/2019/08/03/%E6%95%88%E7%8E%87/%E7%94%A8%20Launch%20Bar%20%E6%89%93%E5%BC%80%20Clion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-08-01%20%E4%B8%8B%E5%8D%885.33.56.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我一直用 XCode 调试 C++ 代码，直到前几天要写一个小组作业，XCode 开始和其他人用的 Clion 不甚兼容了。为了省事，我就临时改用了 Clion。&lt;br&gt;我用的是学校提供的 JetBrains 全家桶，然后遇到了一个问题：在 Launch Bar 里搜不到 
      
    
    </summary>
    
    
    
      <category term="LaunchBar" scheme="https://enoch2090.github.io/tags/lb/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX Toolbox 2.0</title>
    <link href="https://enoch2090.github.io/2019/07/11/%E6%95%88%E7%8E%87/LaTeX%20Toolbox%202.0.html"/>
    <id>https://enoch2090.github.io/2019/07/11/%E6%95%88%E7%8E%87/LaTeX%20Toolbox%202.0.html</id>
    <published>2019-07-10T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:20.719Z</updated>
    
    <content type="html"><![CDATA[<p>这几个学期我都有实验课，几乎每周都要用用 LaTeX 码一篇报告。LaTeX 继承了纯文本的一切优点，排版层次分明，并且不会有各种富文本才会发生的诡异错误。<br>但 LaTeX 的问题在于，要重复使用一种格式时，反复输入命令真的很麻烦——我可能只是想加粗一个词，但要打上 <code>\textbf{}</code> 这样一串冗长的命令，一篇报告重复十几次。<br>春季的时候我为了方便，随手制作了一个 LaTeX Toolbox。那时候常用的命令比较少，所以就比较随心所欲地指定了一些快捷键来直接粘贴命令。最近又开始码报告，所以我对这个工具箱进行了一些小修改，把一些快捷键触发的命令改成了短语扩展，这样书写时更为自然，不必很别扭地去够快捷键。<br>这个工具箱是开箱即用的，你可以在我的 GitHub 下载：<br><a href="https://github.com/Enoch2090/Phillip-s-Gadgets/blob/master/Keyboard%20Maestro/Toolboxes/LaTeX%20工具箱.kmmacros" target="_blank" rel="noopener">下载 LaTeX 工具箱</a><br>另外需要注意的是，这个工具箱是针对 Sublime Text 定做的。它在很多别的编辑器里也能使用，但少部分命令可能会出现小错误，请自行调整动作里的输出格式。我为了防止误触发，设置仅当窗口标题包含 ‘.tex’ 字样时才生效，但有些编辑器并不在窗口标题里显示文件名。这一点也可能需要作修改。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这几个学期我都有实验课，几乎每周都要用用 LaTeX 码一篇报告。LaTeX 继承了纯文本的一切优点，排版层次分明，并且不会有各种富文本才会发生的诡异错误。&lt;br&gt;但 LaTeX 的问题在于，要重复使用一种格式时，反复输入命令真的很麻烦——我可能只是想加粗一个词，但要打上 
      
    
    </summary>
    
    
    
      <category term="效率" scheme="https://enoch2090.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="LaTeX" scheme="https://enoch2090.github.io/tags/LaTeX/"/>
    
      <category term="KeyboardMaestro" scheme="https://enoch2090.github.io/tags/KeyboardMaestro/"/>
    
  </entry>
  
  <entry>
    <title>用 Apple Script 自动整理桌面</title>
    <link href="https://enoch2090.github.io/2019/06/06/%E6%95%88%E7%8E%87/%E7%94%A8%20Apple%20Script%20%E8%87%AA%E5%8A%A8%E6%95%B4%E7%90%86%E6%A1%8C%E9%9D%A2.html"/>
    <id>https://enoch2090.github.io/2019/06/06/%E6%95%88%E7%8E%87/%E7%94%A8%20Apple%20Script%20%E8%87%AA%E5%8A%A8%E6%95%B4%E7%90%86%E6%A1%8C%E9%9D%A2.html</id>
    <published>2019-06-05T16:00:00.000Z</published>
    <updated>2019-12-30T16:43:56.422Z</updated>
    
    <content type="html"><![CDATA[<p>我在寝室里放了一台 27 寸的外接显示器。回到寝室的时候，我会把我的 Macbook 接在上面，把外接显示器作为第一屏幕使用。<br>这带来一个问题：由于是作为第一屏幕，桌面会跟随到那个显示器上去。但由于 Macbook 显示器和外接显示器分辨率不同，<strong>桌面的图标在这个过程中会被打乱，变成相互重叠的。</strong><br>对于这个问题，最简单的解决方法就是每次切换显示器以后，在桌面选择<code>右键-整理</code>。<br>一个更方便的办法是：用 Apple Script 触发桌面整理。方法很简单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tell application &quot;Finder&quot;</span><br><span class="line">tell window of desktop</span><br><span class="line">clean up</span><br><span class="line">end tell</span><br><span class="line">end tell</span><br></pre></td></tr></table></figure><p>把这段代码加入 LaunchBar，就可以只用键盘触发操作：<br><a href="https://github.com/Enoch2090/Phillip-s-Gadgets/blob/master/LaunchBar/Clean%20up%20desktop.lbaction" target="_blank" rel="noopener">LaunchBar 版本整理桌面</a><br>但用键盘触发终究是手动触发。所以我又用 Keyboard Maestro 做了一个自动版本的：<br><a href="https://github.com/Enoch2090/Phillip-s-Gadgets/blob/master/Keyboard%20Maestro/System/Clean%20up%20desktop.kmmacros" target="_blank" rel="noopener">KM 版本自动整理桌面</a><br>这个动作的实现比较取巧，因为KM 没有外接显示器相关的触发条件。我用的方案是选择「The audio output device changes」这个触发条件，因为我的显示器同时还接着音响。连接显示器的时候，Macbook 就会把音频输出切到音响，这也就意味着对我来说「音频输出切换」这个条件可以表示显示切换。</p><p><strong>更新：</strong>用了两天，发现音频输出作为触发条件不稳定，所以换成了寝室和教学楼的 WiFi 触发。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我在寝室里放了一台 27 寸的外接显示器。回到寝室的时候，我会把我的 Macbook 接在上面，把外接显示器作为第一屏幕使用。&lt;br&gt;这带来一个问题：由于是作为第一屏幕，桌面会跟随到那个显示器上去。但由于 Macbook 显示器和外接显示器分辨率不同，&lt;strong&gt;桌面的
      
    
    </summary>
    
    
    
      <category term="LaunchBar" scheme="https://enoch2090.github.io/tags/lb/"/>
    
      <category term="KeyboardMaestro" scheme="https://enoch2090.github.io/tags/KeyboardMaestro/"/>
    
      <category term="macOS" scheme="https://enoch2090.github.io/tags/macOS/"/>
    
      <category term="自动化" scheme="https://enoch2090.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="AppleScript" scheme="https://enoch2090.github.io/tags/AppleScript/"/>
    
  </entry>
  
  <entry>
    <title>统计 Drafts 里的草稿数据</title>
    <link href="https://enoch2090.github.io/2019/05/03/%E6%95%88%E7%8E%87/Drafts%20%E7%BB%9F%E8%AE%A1%E5%99%A8.html"/>
    <id>https://enoch2090.github.io/2019/05/03/%E6%95%88%E7%8E%87/Drafts%20%E7%BB%9F%E8%AE%A1%E5%99%A8.html</id>
    <published>2019-05-02T16:00:00.000Z</published>
    <updated>2019-12-30T16:43:36.988Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/05/03/%E6%95%88%E7%8E%87/Drafts%20%E7%BB%9F%E8%AE%A1%E5%99%A8/DraftsData_banner.JPG" alt="DraftsData_banner"><br>许多写作工具都会内置文本统计，在写作的时候实时展示当前的数据：有多少个字符，文章的阅读时间是多久……在此之外，有些工具还会附带一个更加全面的数据统计界面,例如 Ulysses 可以查看某一个文档组的总字数等数据。<br>但是在 Drafts 上，这样的全局统计功能始终是缺失的。Drafts 仅自带了一个当前草稿的字数统计，这个字数统计还是针对英文设计的，面对中文内容可以说近乎瘫痪。<br>所以，我自己做了一个 Drafts 的统计器。</p><h2 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h2><p><a href="https://github.com/Enoch2090/Phillip-s-Gadgets/blob/master/Drafts/%E5%8A%A8%E4%BD%9C/Drafts%20%E7%BB%9F%E8%AE%A1.draftsAction" target="_blank" rel="noopener">下载 Drafts 统计器</a><br>这个统计器的安装很简单。你只需下载动作文件并用 Sharesheet导入到 Drafts，就会自动完成安装。动作本身也是开箱即用，几乎不需要额外的设置就能直接使用。<br>不过，在运行这个动作之前，你必须确保 Drafts 在 iCloud 里存有草稿的近期备份：</p><ul><li>如果你平时就开着Drafts 的「自动备份」，那就没有任何问题了。不过我还是推荐将备份周期设为一周一次。</li><li>如果并没有开启「自动备份」功能，你需要在运行动作前在设置里手动对草稿进行一次备份，具体原因稍后会解释。并且，我推荐将「自动备份」这一功能保持开启，方便将来查看草稿统计。<br>至此准备工作已经完成。这时你只需点击安装好的动作运行即可。这个动作有两大功能：</li></ul><ol><li>对着空草稿运行，会弹出一个页面，展示你所有草稿的统计数据。展示的数据包括但不限于：<ul><li>写下的总字数。</li><li>草稿的分布。</li><li>使用的标签。</li><li>……</li></ul></li><li>对着有内容的草稿运行，会弹出一个对话框，展示这条草稿的字数统计。你可以直接关闭这个对话框，也可以点击「查看 Drafts 统计数据」进一步查看所有草稿的统计数据。</li></ol><p>这个动作的可扩展性非常强，我之后还会继续更新。你也可以根据自己的需要调整具体统计的项目。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/05/03/%E6%95%88%E7%8E%87/Drafts%20%E7%BB%9F%E8%AE%A1%E5%99%A8/DraftsData_banner.JPG&quot; alt=&quot;DraftsData_banner&quot;&gt;&lt;br&gt;许多写作工具都会
      
    
    </summary>
    
    
    
      <category term="Drafts" scheme="https://enoch2090.github.io/tags/drafts/"/>
    
      <category term="效率" scheme="https://enoch2090.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>致这个失败的春天</title>
    <link href="https://enoch2090.github.io/2019/04/20/%E8%A7%82%E7%82%B9/%E8%87%B4%E8%BF%99%E4%B8%AA%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%98%A5%E5%A4%A9.html"/>
    <id>https://enoch2090.github.io/2019/04/20/%E8%A7%82%E7%82%B9/%E8%87%B4%E8%BF%99%E4%B8%AA%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%98%A5%E5%A4%A9.html</id>
    <published>2019-04-19T16:00:00.000Z</published>
    <updated>2019-12-31T14:58:36.316Z</updated>
    
    <content type="html"><![CDATA[<p>三月份和四月份一下子成了失败的代名词。<br>三月份参加 OM 结构赛，因为经验不足导致崩盘。经验不足，那是水平的问题，也就算了。但随后的四月，我和同学几乎天天肝到四点准备一场机械赛，结果止步三十二强。<br>机械赛这件事情，整个失败看上去是如此莫名其妙：在赛前，我们觉得自己的水平最起码也是进四强。这个比赛，概括来说就是造一个机械，在限时内在沙地里移动并挖取物块，并将挖取的物块转移到得分区，根据物块类型和数量计算总分。<br>从实力上来说，我觉得我们队是真的很强的。队里有两个常年做机器人的大佬，Solidworks 用得得心应手；有好几个擅长码代码的，可以一起调试电控；也有强于修改硬件部分、根据情况实地调整的，总而言之我们并没有碰上过大的技术难题。<br>另外我们的整个流程，我觉得也足够符合工程规范：</p><ul><li>在正式动工之前，我们先用木板和零件加工了一台 minimum function 的样机，用它来测算尺寸和测试设计（之所以不用 Solidworks 做这个是因为很多我们用的零件没有现成的模型）。等这些都完成了，我们才开始做正式版。</li><li>在正式版上，关键的挖掘部件我们改动了很多版本，每一次都尽力让外形设计贴合场地实况。</li><li>对比很多组混乱的电控系统，我们在电控完工之后的第一件事就是集成和理线。事实证明，很多被淘汰的组别都是因为电控太混乱，上场以后就失控了；拿下来检查才发现是某处的线掉了。</li><li>整台机械在初赛、复赛和决赛的赛程中可能会有变动，我们因此尽量把电控做得模块化，给后面的调整留好所有接口。这使得我们在复赛前的调整非常轻松。</li><li>在遥控的设计上，我尽力把操作做得人性化。大部分控制键用的是简单且易于理解的设计语言；少部分重要但不能随意用的功能，用复杂的组合键防止误操作；部分耗费操作员精力的动作直接自动化，并且仍然力求在舒适的操作手感和精细的控制能力之间寻求平衡。</li></ul><p>最后的结果是，我们的机械本身运行很稳定，遥控和电控也没有发生故障。<br>但我们还是输了。<br>赛后我们想了很久，其实我们这次<strong>做得很 engineering，输得也很 engineering。</strong>比赛前我室友开玩笑般立下 flag：</p><blockquote><p>我觉得我们很稳，除非……你知道，最坚固的城墙，永远是从内部倒塌的。</p></blockquote><p>他这句话已经成功预言（导致？）了我们 OM 的失败，我怎么也没想到，又预言了机械赛的崩盘。当他这么说的时候，他是想叫我多注意电控的稳定，不要发生上场以后控制出问题的情况。我们当然都这么觉得，所以在电控上花了大工夫。然而真正导致崩盘的却是一个很小的问题：我们的机械底盘不够高。于是它在操作时，有两次满载物块地卡在了我方场地里的一个可互动的道具上。根据规则，我们只能把装载的物块全部倒掉，然后请场务帮忙移动机械本身。于是我们挖了三倍于对方的分数 ，却只有三分之一进了我们的得分区。这么说来，打败我们的，还真是我们自己。<br>从 engineering 的角度来说，这大约可以叫系统性错误。整个系统，作为系统是完好的，怎么测都不会有故障；但在与外界互动时，系统却遇到了设计时未曾考虑的问题。我们在实地测试的时候，考虑了各种机动性问题，包括陷在沙子里出不来的情况。正是因为我们改造时考虑过这类情况，所以才会觉得底盘已经足够高了，完全不会受干扰。结果最后引起故障的因素是我们在测试时完全没考虑过的己方道具，这个道具是一个「地雷」，对方的机械碰到是会罚时的。但因为我方可以随意触碰它，我们完全忽略了这玩意对操作带来的影响。<br>总结这堆乱七八糟的失败，从某种程度上是一种自我安慰：虽然我们输得非常不甘，但失败总算教会了我们一点东西。这种自我安慰究竟有几分是有意义的仍待商榷，不过这句话我算是不可能忘记了：</p><blockquote><p>最坚固的城墙，永远是从内部倒塌的。</p></blockquote><p>致这个失败的春天。还有，我恨石楠。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;三月份和四月份一下子成了失败的代名词。&lt;br&gt;三月份参加 OM 结构赛，因为经验不足导致崩盘。经验不足，那是水平的问题，也就算了。但随后的四月，我和同学几乎天天肝到四点准备一场机械赛，结果止步三十二强。&lt;br&gt;机械赛这件事情，整个失败看上去是如此莫名其妙：在赛前，我们觉得自
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>草稿处理的无缝衔接：Drafts 终于登上 macOS</title>
    <link href="https://enoch2090.github.io/2019/03/27/%E5%BA%94%E7%94%A8/%E8%8D%89%E7%A8%BF%E5%A4%84%E7%90%86%E7%9A%84%E6%97%A0%E7%BC%9D%E8%A1%94%E6%8E%A5%EF%BC%9ADrafts%20%E7%BB%88%E4%BA%8E%E7%99%BB%E4%B8%8A%20macOS.html"/>
    <id>https://enoch2090.github.io/2019/03/27/%E5%BA%94%E7%94%A8/%E8%8D%89%E7%A8%BF%E5%A4%84%E7%90%86%E7%9A%84%E6%97%A0%E7%BC%9D%E8%A1%94%E6%8E%A5%EF%BC%9ADrafts%20%E7%BB%88%E4%BA%8E%E7%99%BB%E4%B8%8A%20macOS.html</id>
    <published>2019-03-26T16:00:00.000Z</published>
    <updated>2019-12-31T15:03:00.475Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/03/27/%E5%BA%94%E7%94%A8/%E8%8D%89%E7%A8%BF%E5%A4%84%E7%90%86%E7%9A%84%E6%97%A0%E7%BC%9D%E8%A1%94%E6%8E%A5%EF%BC%9ADrafts%20%E7%BB%88%E4%BA%8E%E7%99%BB%E4%B8%8A%20macOS/DFM.png" alt></p><blockquote><p>Drafts 对双平台的支持意味着无限可能。在此前，我们一直认为 Drafts 更多只是一个文字的收集端，你可以随时打开它记点东西，然后一键把记下的东西发送到别的地方。但那以后我们几乎就不会再去管已经存档的文本。DFM 的出现，不仅仅是简单地补全了 Drafts 这个应用在桌面端的表现。</p></blockquote><p>本文是我在 Power+ 2.0 发布的稿件，请<a href="https://sspai.com/post/53761" target="_blank" rel="noopener">点击此处</a>跳转阅读。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/03/27/%E5%BA%94%E7%94%A8/%E8%8D%89%E7%A8%BF%E5%A4%84%E7%90%86%E7%9A%84%E6%97%A0%E7%BC%9D%E8%A1%94%E6%8E%A5%EF%BC%9ADrafts
      
    
    </summary>
    
    
    
      <category term="Drafts" scheme="https://enoch2090.github.io/tags/drafts/"/>
    
  </entry>
  
  <entry>
    <title>「执行」的效率</title>
    <link href="https://enoch2090.github.io/2019/03/05/%E6%95%88%E7%8E%87/%E3%80%8C%E6%89%A7%E8%A1%8C%E3%80%8D%E7%9A%84%E6%95%88%E7%8E%87.html"/>
    <id>https://enoch2090.github.io/2019/03/05/%E6%95%88%E7%8E%87/%E3%80%8C%E6%89%A7%E8%A1%8C%E3%80%8D%E7%9A%84%E6%95%88%E7%8E%87.html</id>
    <published>2019-03-04T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:40.935Z</updated>
    
    <content type="html"><![CDATA[<p>今天晚上在骑车回寝室的路上，我在思考一个问题：我现在在用的整个任务管理系统，虽然很好地实现了收集、过滤、搜索等各方面的需求，但有一个问题一直无法解决：<strong>执行</strong>。<br>说起执行问题，最大的毛病还是<strong>拖延</strong>。我看到很多人给出的解决方案是：把任务拆成比较小的子任务，这样可以减少拖延。这个方法确实有时候管用，但是我觉得还是存在问题：假如原始任务真的足够复杂，拖延症甚至足以阻止你把它给拆分开来。要是没有什么来自外部的 Due，它就会静静地在你的任务列表里，一躺就是三个月。<br>我目前还没想到什么特别有效的解决方案。不过今天 Power+ 发了一篇文章恰好是有关「执行」的：<br><a href="https://sspai.com/post/53188" target="_blank" rel="noopener">一个真正有效的「屏幕时间」使用方法</a><br>这篇文章解决问题的思路说来很简单，但是的确是最为有效的。我觉得要想解决任务执行的低效，这是一个很好的参考案例。不过关于这个问题的思考，我想我还得再骑上几十公里的路程了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天晚上在骑车回寝室的路上，我在思考一个问题：我现在在用的整个任务管理系统，虽然很好地实现了收集、过滤、搜索等各方面的需求，但有一个问题一直无法解决：&lt;strong&gt;执行&lt;/strong&gt;。&lt;br&gt;说起执行问题，最大的毛病还是&lt;strong&gt;拖延&lt;/strong&gt;。我看到很
      
    
    </summary>
    
    
    
      <category term="效率" scheme="https://enoch2090.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>蒙特利尔冬季生存指南</title>
    <link href="https://enoch2090.github.io/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97.html"/>
    <id>https://enoch2090.github.io/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97.html</id>
    <published>2019-03-02T23:00:00.000Z</published>
    <updated>2020-01-13T21:42:03.396Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/%E5%9B%BE%E5%83%8F%2015.JPG" alt><br>我今年整个一月是在蒙特利尔度过的。<br>这是由于学院有一个冬季游学项目，可以报名去世界各地的学校参加冬季的短期项目。我发现麦吉尔大学有个课程还挺有意思的，于是就跑到蒙特利尔去了。我私以为，每到一座新的城市，最大的乐趣便是在它的街头巷尾穿行，寻找隐藏在城市表象之下的精神内涵。不过在那之前……你得确保生存问题。<br>下面你将阅读的，就是我这一个月来在蒙特利尔的一点儿生活经验，以及满嘴跑马，美其名曰——指南。</p><h2 id="一-并不会冷死"><a href="#一-并不会冷死" class="headerlink" title="一 | 并不会冷死"></a>一 | 并不会冷死</h2><p>无法否认的是，蒙特利尔的冬天很冷。不过这种冷并不是令人绝望的那种冷，只要你穿得够厚实，还是抵挡得住的。<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/IMG_0967.jpg" alt="但是脸很疼"><br>在我停留的一月份，蒙特利尔的气温通常在零下二十度至零下十度之间徘徊。气温整体上不会超出这个区间，不过也有过一些大波动，这些稍后再提。这样的温度，实际上只要做好以下准备就不会出事：</p><ul><li>一件足够厚实的外套。</li><li>外套下两到三件衣服，最好包含一件毛衣。</li><li>两条或以上的裤子。</li><li>保暖性能较好的鞋子或袜子。</li><li>围巾和帽子。<br>这个列表实际上不是很需要手套，因为把手插在外套口袋里足以抵御寒冷了。蒙特利尔毕竟也不过北纬45°，只要不起风，都还算能承受得住。<br>另外我建议外套下的衣服也不要穿太多。一件短袖一件毛衣足矣，顶多再加一件衬衫。当地室内空调常常都是开到二十几度，太多衣服在室内会很难受。<h2 id="二-拯救你的锂电池"><a href="#二-拯救你的锂电池" class="headerlink" title="二 | 拯救你的锂电池"></a>二 | 拯救你的锂电池</h2>我就这么坚持着「零下十几度也不过如此嘛」的态度，直到我的手机第一次在户外被冻得关机。<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/IMG_0804.jpg" alt="低电量警告"><br>其实这件事情我早该想到了，毕竟连高中化学都会教我们：温度下降，绝大部分反应的速率都下降；对电池来说，反应速率下降就意味着输出功率减小。对于锂电池来说，低温还意味着更多的制约条件，比如电解液凝固、锂离子不易扩散等。总之就是：锂电池很怕低温。<br>就我的情况而言，我那台老旧的 iPhone 6S 在蒙特利尔的室外无法撑过十分钟。另外在被这么冻了小半个月之后，它的电池性能也显著下降了。<br>在冬季的蒙特利尔，如果你一定要带手机出门，以下是你能为你的电池做的事情：</li></ul><ul><li>如果你准备戴手套，最好还是留出一只手捂手机。单纯地放在外套口袋里并不能为它保暖。</li><li>可行的话，还是尽量贴身放，并且少拿出来吧。</li><li>如果真的被冻关机了，给电池部位保暖一会儿即可回电。<strong>不要在低温状态下去尝试充电</strong>，可能会对电池造成不可逆的损伤。<br>别小看这个「不可逆的损伤」。等我回国的时候，我的手机电池状况已经差到无法正常使用了，放在那摆两个小时就会自己没电。<h2 id="三-公共交通指北"><a href="#三-公共交通指北" class="headerlink" title="三 | 公共交通指北"></a>三 | 公共交通指北</h2>蒙特利尔的公共交通本身相当发达，公交与地铁可算是遍布全市了。夏季的时候，甚至还有城市单车可供骑行。不过在冬天，<img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/montreal-metro.jpg" alt="montreal-metro">公共交通只能选择 STM 运营的公交与地铁线路。</li></ul><p>蒙特利尔的地铁票大约为 3.25 刀，如果停留时间较长，理想的选择是购买三日票或是周票。你可以在 <a href="http://www.stm.info/sites/default/files/pdf/en/tarifs.pdf" target="_blank" rel="noopener">这个链接</a> 找到车票定价的详情。在市中心时，绿线与橙线是最常见的选择。这两条地铁线路高度平行，不少站点之间还有地下通道相互连接。有一件事是坐地铁需要特别注意的：蒙特利尔的地铁里几乎全是法语，可能需要准备好谷歌翻译。<br>蒙特利尔的公交车价格与地铁是一样的，可以说是有点小贵。另外你也可以尝试使用 Uber，起步费大约八到九刀；高峰时期可能会翻倍，如果能凑到几个人一起分摊就比较合算了。</p><h2 id="四-如何做一顿饭"><a href="#四-如何做一顿饭" class="headerlink" title="四 | 如何做一顿饭"></a>四 | 如何做一顿饭</h2><p>蒙特利尔的总体物价水平在加拿大算是中等，但吃饭的消费却不低。一顿正常的简餐，价格大约在 10 至 20 刀；稍微好一些的牛排或是料理，就要 30 刀起步了。天天出门吃，钱包可经受不起。对比之下自己做饭就相对便宜一些，10 刀以内就足够吃饱。<br>上课期间，我们住的是类似于酒店式公寓的学生宿舍，几个寝室共用一间厨房的那种。厨房里提供电磁炉、烤箱和微波炉……还有永远用不完的吸油纸。所以我们经常几个人凑在一块，自己做饭吃。做饭的第一步是厨具。大部分厨房用品在超市里都能买到。如果要居住较长时间，建议安顿好以后就去超市晃一圈。<br>在 Dollarama，你可以找到大部分需要的厨房用品。这家超市出售的大多是廉价商品，但是质量完全够用上个一年半载。在这里你可以买到绝大部分杯子、碗、餐具等。<br>去完  Dollarama 可以再去 Provigo 晃上一圈，这家超市卖的东西价格更高，质量也更好。我去的时候刚好赶上平底锅三件套促销出售，只要 12 刀就能买到。不过除此之外，在这里更多是直接买各种食材。结账时，可以问柜员要一张 Optimum 的卡，注册是免费的。有了这张卡，你在购买每周指定的商品时可以获得一些积分，并能兑换成现金抵扣。与 Provigo 同等价位的选择还有 IGO，它与前者在货源和规模上都差不多。<br>此外在唐人街还有一家「家乐福」。这里打引号是因为，这个「家乐福」不是 Carrifour，而是一家私营的超市，英（法）文名叫 G&amp;D Supermarché。这家店有很多中式的商品出售，你可以买到李锦记的酱油、康乐醋、以及各种各样国内能见到的零食。<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/15504186798329.jpg" alt="家 乐 福"><br>至此工具食材完备，我想你应该是可以顺利开工了。最后给一个建议：<strong>如果可以的话，带个锅铲过去。</strong>当地超市里基本只看得到塑料锅铲，那玩意煎个蛋焦得比蛋还快。金属锅铲也不是找不到，但基本上都不便宜，不太找得到十刀以下的。</p><h2 id="五-升温了，别出门。"><a href="#五-升温了，别出门。" class="headerlink" title="五 | 升温了，别出门。"></a>五 | 升温了，别出门。</h2><p>一月底的时候，蒙特利尔突然有好几天温度上升。最热的时候，这座在零下二十度严寒中颤抖的城市忽而升到了零上三度。这个零上三度可不是上海湿冷的零上三度，它热到你可以直接一件薄外套出门。<br>这照理说是好事，这样我们是不是就可以多到户外玩玩了？想得美，你可是在蒙特利尔。<br>问题在于，但凡是升温，多半是要下雪；大晴天往往是零下二十度。这是常识解释得通的。但糟糕的是，蒙特利尔的路面上总是有大量积雪，还撒了不少碎石和融雪剂。这一升温，融雪夹杂着各路乱七八糟的东西，一下子成了冰冷的泥浆，一脚下去能把鞋给埋了。<br>另一个棘手的问题是，温度一上去，下的雪就不再是雪了，而是冻雨。这雨水在高空中是液态的，但温度接近零度，一落地就会变成冰。于是路上一层积雪一层冰，过上几天再来一场雪，这成了三明治了。一脚下去，先是踏穿表面的雪，随后中间的冰裂开把你的脚卡住，最后你还会陷进底下的雪里。<br>好吧，反正我的建议是：要是大幅升温了，还是别出门了吧。或者你可以试试地下城——</p><h2 id="六-在地下城穿行"><a href="#六-在地下城穿行" class="headerlink" title="六 | 在地下城穿行"></a>六 | 在地下城穿行</h2><p>地下城在加拿大并不少见，不过蒙特利尔的地下城却是前所未有的大：市中心的地下，几乎完全就是空的。事实上，蒙特利尔拥有全世界最大规模的地下城，地下通道总长数十千米，连接了上千家商铺。<br>有这么一个地下城就意味着，如果你在市中心附近，你完全可以仅通过地下城在两地之间来往。冬季的蒙特利尔路面时常有积雪，选择走地下城意味着你的路途会轻松许多。举例来说，从我们居住的 evo 到麦吉尔大学所在的 Sherbrook St.，在地面上穿过整个 Downtown 即可直达，耗时大约 15 分钟。如果选择走地下城，最快捷的方案是先在地面过马路到斜对角的 Place Bonaventure，接下来的路程即可全程在室内行走了，但这样的耗时大约在 20 至 25 分钟。<br>在地下城行走的一大乐趣在于：地下城连通了大量商场的地下层，通道两边往往开着琳琅各色的商铺。在上学路上，有一家贺卡店就相当有意思，它提供全套的贺卡定制服务。另外我还找到一家桌游和玩具店，位于Centre Eaton Montréal 地下，里面有整整一面墙的各式卡牌桌游，还有一大柜子的 D&amp;D 主持手册……<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/IMG_1213-7763827.JPG" alt><br>让我们姑且跳出商圈这些俗气的东西。蒙特利尔的地下城最为独特的一点是，它完美地将一座城市所具有的现代性和时代的厚重感相融合。通常我们不会对北美大陆所谓的历史大谈特谈，但百年的时间其实也不算短，更何况蒙特利尔是北美大陆上历史相对悠久的城市。地下城的修建前后经历一个世纪，因此你在地下也能发现不少富有时代气息的东西。某条隧道的光鲜装饰墙面之下，斑驳的墙体显然是修建于上个世纪；一处连接地面与地下的楼梯，老旧的表面展示着时间的磨痕……这种场景是极为常见的。<br>我在地下城四处游荡。<br>在 Square Victoria 附近的某条地下通道里，我找到了这个地方：这里的地下通道穿过了一面巨大的花岗岩墙体。这块花岗岩墙体曾经是某个银行地下金库的一部分，如今它却融入了这条地下通道的整体。纤弱的玻璃与瓷砖穿透坚实而厚重的墙面，在这地下深处营造出一种荒谬的不真实感。在这个地下的空间里，墙体本身就构成了一个相当具有时代感的场景，而玻璃走道为它插入了现代气息。事实上，这个空间是一件艺术品，在不远处的墙上还印有魁北克省政府配的解说。<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/IMG_0885.JPG" alt><br>这面墙外露的部分已经被磨平，上面仍有着钻孔的痕迹，墙体里的钢筋截面也仍然清晰可见。这些钢筋早已与石头融为了一体，在百年的时间里它们互相渗透，互相侵蚀，边缘早已不可辨认。<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/IMG_0889.JPG" alt><br>在空间上，玻璃走廊与花岗岩墙体都是开放的，在这里唯一「关闭」的东西是金库原来的大门——这扇半开半掩的金属防盗门与观众之间被一道玻璃隔开。纵使如此，门本身依然在空间上截断出一个小隔间，并且遮蔽了这一空间的大多数细节。此处的地下空间本身是明亮且宽敞的，而这通向未知黑暗处的门成功撕扯开了这一处空间的一体性。<br><img src="/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/IMG_0887.jpg" alt><br>如果你有兴趣，请务必在地下多转转。鲜有哪座地下城，能带给你这种交织的独特体验。</p><h2 id="尾声-城市印象"><a href="#尾声-城市印象" class="headerlink" title="尾声 | 城市印象"></a>尾声 | 城市印象</h2><p>就如同我开头所说的，我在乎的是城市表象下的东西。称之为城市的内核或许有些过头，作为一个仅停留了一个月的过客，我觉得我的观点很容易受活动范围和经历限制而有偏差。曾经看到网上的说法，说蒙特利尔人有一种法国人的高傲和冷漠，我总觉得这种说法太过武断。一座城市的组成实在太过于复杂，我们很难从一些小事去给它定性。以我的经历来说，我和朋友在零下二十度的路上吃冰棍，被路人调侃，于是我们送了他一根冰棍，还聊了会天。更有一次我在路上对着谷歌地图确认路线，被路人主动询问是否需要帮忙。这些小事其实同样无法论证蒙特利尔人是否都非常友好，我甚至都不知道那是不是本地人。<br>所以在我的资历所允许的范围内，我只能说，蒙特利尔给我什么样的印象。我觉得这是一座注重艺术与文化的城市，同时有着北美大陆的粗放与欧洲的细腻。这些印象的具体细节，就留到以后再讲吧。<br>祝你在冬季的蒙特利尔顺利生存下去。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/03/03/%E6%96%87%E5%8C%96/%E8%92%99%E7%89%B9%E5%88%A9%E5%B0%94%E5%86%AC%E5%AD%A3%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/%E5%9
      
    
    </summary>
    
    
    
      <category term="指南" scheme="https://enoch2090.github.io/tags/%E6%8C%87%E5%8D%97/"/>
    
      <category term="旅行" scheme="https://enoch2090.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>用 Taskpaper 来背单词</title>
    <link href="https://enoch2090.github.io/2019/02/27/%E6%95%88%E7%8E%87/%E7%94%A8%20Taskpaper%20%E6%9D%A5%E8%83%8C%E5%8D%95%E8%AF%8D.html"/>
    <id>https://enoch2090.github.io/2019/02/27/%E6%95%88%E7%8E%87/%E7%94%A8%20Taskpaper%20%E6%9D%A5%E8%83%8C%E5%8D%95%E8%AF%8D.html</id>
    <published>2019-02-26T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:44.436Z</updated>
    
    <content type="html"><![CDATA[<p>前些时候我把自己的任务管理系统从 Todoist 迁移到了 Taskpaper。<br>这么做有许多原因，其中有一个原因是：Taskpaper 用的是纯文本，更加朴素简洁。<br>说起纯文本，我一直在使用的 Drafts，本质上也用的是纯文本。在担任任务管理系统这件事以外，使用 Taskpaper 的实质是把一部分本来用 Drafts 做的事情给继承了过来。有时候，我会在看到某个生词的时候把它随手记在 Drafts 里，翻草稿的时候看到就顺便背一背。因此我想到了这个问题：能不能用 Taskpaper 来背单词呢？<br>答案显然是可以的。</p><h2 id="为什么可以这样做？"><a href="#为什么可以这样做？" class="headerlink" title="为什么可以这样做？"></a>为什么可以这样做？</h2><p>很多时候，背单词这件事情，靠的就是反复。如果想快速记住大量单词，自然有很多高阶的技巧；但是靠堆熟练度来帮助掌握，一定是永远有效且最靠谱的方案。<br>而 Taskpaper 就可以帮助我去反复熟悉单词。我对于 Taskpaper 平常的使用，是借鉴了 @Minja 的思路：把每日任务的窗口始终放置在屏幕左上角，这样每次回到桌面都能看到。此外我还用 Keyboard Maestro 给 Taskpaper 设置了一组快捷键 <code>⌘cmd + ⌥option + ⌃ctrl + ⌂shift + T</code>，每次要做一件事情前，先调 Taskpaper 的窗口出来确认一下还有哪些事情要做。<br>所以我每天是要看很多次 Taskpaper 的，这就提供了一个反复熟悉的机会。如果把要背的单词放在这个地方，每次打开 Taskpaper 的时候在心里默念一番，一天下来就差不多记住了。</p><h2 id="具体怎么操作？"><a href="#具体怎么操作？" class="headerlink" title="具体怎么操作？"></a>具体怎么操作？</h2><p>首先，你的 Taskpaper 窗口必须始终放在桌面左上角。为了便于时常调出 Taskpaper，我还做了一个 Keyboard Maestro 动作来快速调出 Taskpaper，你可以在<a href="https://github.com/Enoch2090/Phillip-s-Gadgets/blob/master/Keyboard%20Maestro/Launcher/Taskpaper.kmmacros" target="_blank" rel="noopener">这里下载</a>。这个动作本身很简单，但它的触发方式用上了 Mac 的四个修饰键，你或许需要参考《<a href="https://sspai.com/post/46184" target="_blank" rel="noopener">macOS 改键利器：Karabiner-Elements 使用详解</a>》这篇文章来了解怎么定制一颗 <code>Hyper</code> 键来一次按下这四个键。当然，你也可以自行修改这个动作里的快捷键。<br>至此你应该就能很方便地调出 Taskpaper 来参考了。这时你需要做的就是找几个单词，连带中文含义、词性等必备信息一起丢进 Taskpaper。放进 Taskpaper 时需要注意的是：</p><ul><li><strong>把每一个单词单独作为一条任务。</strong>如此一来，背出来了就可以当作任务完成，直接把这个词勾掉就好。</li><li><strong>一屏内不要放太多单词。</strong>我们现在是通过每次看任务的时候扫上一眼在背单词，属于无心插柳。这种方法不比正儿八经集中精神地背，所以一眼能看到的单词不宜过多，三个以内最佳。</li><li><strong>要有同普通任务区分的标记。</strong>这些单词毕竟不是任务，我建议给它们打上「@word」的标签，以便于同普通任务区分。这样一来执行各类搜索等操作的时候，也方便把它们排除出去。具体的排除语法是：<code>not @word</code>。只要在搜索栏键入这行语句，就可以把所有的单词都过滤掉了。</li></ul><h2 id="这一方法有什么限制？"><a href="#这一方法有什么限制？" class="headerlink" title="这一方法有什么限制？"></a>这一方法有什么限制？</h2><p>经过我一段时间的尝试，我觉得这一方法最大的限制在于，它不能大量地记忆词汇；它更适合用来记忆少量比较难记的单词。这个「难记」也不是泛指那种背了很多遍，却仍然可能搞不清楚意思的单词，例如 yield 这种多词义的词。相对地，它更适合用来记忆一些比较长，但是含义简单的单词，例如 procrastination。<br>另外一大限制就是效率不算很高。不过这么背起单词来，本就是锦上添花。如果想正经背单词，还是去用 <a href="https://quizlet.com/zh-cn" target="_blank" rel="noopener">Quizlet</a> 吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前些时候我把自己的任务管理系统从 Todoist 迁移到了 Taskpaper。&lt;br&gt;这么做有许多原因，其中有一个原因是：Taskpaper 用的是纯文本，更加朴素简洁。&lt;br&gt;说起纯文本，我一直在使用的 Drafts，本质上也用的是纯文本。在担任任务管理系统这件事以外，
      
    
    </summary>
    
    
    
      <category term="Taskpaper" scheme="https://enoch2090.github.io/tags/Taskpaper/"/>
    
  </entry>
  
  <entry>
    <title>Drafts 5.6 更新详解：工作区再次加强，对捷径支持更完善</title>
    <link href="https://enoch2090.github.io/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84.html"/>
    <id>https://enoch2090.github.io/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84.html</id>
    <published>2019-01-22T16:00:00.000Z</published>
    <updated>2020-01-03T02:38:34.402Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84/%E5%9B%BE%E5%83%8F%2021.jpg" alt><br>自上一篇 Drafts 更新详解发布以来，已经过去了近四个月。这段时间里，Drafts 的 Mac Beta 版本迭代了数次，基础功能已经可以正常使用了。不过令人惊喜的是，在 Mac 版开发之余，iOS 版本也仍然在保持更新。就在前不久，Drafts 发布了 5.6.0 版本。这个版本再一次加强了工作区的功能，同时也带来了一些其它的新特性。</p><h2 id="工作区可以直接载入动作组和列表了"><a href="#工作区可以直接载入动作组和列表了" class="headerlink" title="工作区可以直接载入动作组和列表了"></a>工作区可以直接载入动作组和列表了</h2><p>很久以前，我在 <a href="https://sspai.com/article/45895?series_id=9" target="_blank" rel="noopener">如何在 Drafts 中打造一个排除干扰且高效的工作环境</a> 一文中介绍过一种同时载入工作区、动作组和键盘扩展条的方法。在不同的情境下，我们常用的动作和按键很有可能是不同的。在写作时我可能会载入一个用于写作的工作区，同时使用一套文字处理的键盘；在平时速记时我可能会用另一个用于任务管理的工作区，同时使用一套快速输入标记符号的键盘。当我们想做一件事情的时候，我们使用的工作区和键盘扩展往往是配套的——因此，找到一种同时载入工作区和键盘扩展的方法是很有必要的。<br>当时我采取的方案是使用 JavaScript 来载入内容。不过 JavaScript 固然强大，但是易用性就大打折扣。如果想要修改载入内容，我们还得对代码进行修改。但现在，我们有了更简便易行的方案。在这次更新中，工作区可以在载入时直接加载指定的动作组和键盘扩展条了。如此一来，我们就只需要对工作区的设置稍作修改即可。<br>修改的方法很简单：点击草稿列表右上角的设置按钮进入工作区列表，在某个工作区上左滑，点击「Edit」进入它的设置界面。在设置列表的最下方，有一个「SELECT」选项，你可以在这里设置载入工作区时的额外加载选项。<br><img src="/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84/new-IMG_0974.jpg" alt="设置工作区的加载选项"></p><p>以我自己的设置为例，我有一个工作区是专门用来写东西的：</p><ol><li>第一项是设置载入工作区时默认载入的草稿列表。因为新写的东西一般都会放在收件箱里，所以选择 <code>Inbox</code>。</li><li>第二项是设置载入工作区时默认载入的动作列表。写东西时我不会经常打开动作列表，所以我就没有设置。</li><li>第三项是设置载入工作区时默认载入的键盘扩展。我选择载入一个专门用于文字编辑的动作组作为键盘扩展。<br>设置好这几项后关闭设置界面，下次再打开这个工作区的时候，一切就都会自动载入了。<br>这个更新虽然不是什么翻天覆地的大变化，但确实非常实用。不难看出，Drafts 对 5.0 版本新增的工作区功能相当重视，颇有将它打造成一个特色功能的势头。</li></ol><h2 id="可以用-URL-Scheme-快速添加捷径了"><a href="#可以用-URL-Scheme-快速添加捷径了" class="headerlink" title="可以用 URL Scheme 快速添加捷径了"></a>可以用 URL Scheme 快速添加捷径了</h2><p>我们都知道 Drafts 的动作支持运行捷径。在遇到一些较为复杂的需求时，用易于编写的捷径来解决问题，是非常实用便捷的方案。在过去，如果我们要用 Drafts 运行一条捷径，就需要新建一个动作，手动输入捷径的名字。有的时候我们要运行的捷径仍处在调试阶段，它可能长这样：</p><p><img src="/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84/15480438766290.jpg" alt="捷径的名字长且复杂"></p><p>这样的命名确实方便我们进行调试，也方便快速找到某条捷径。但要把这么一长串名字手动输入到 Drafts 里未免有些麻烦。就算复制粘贴，我们也需要操作一番才能复制到捷径的名字。<br>现在这件事情简单多了。Drafts 在这次更新中支持了一条新的 URL Scheme:<br><code>drafts5://create_shortcut_action?name=捷径名字</code><br>运行这条 URL Scheme，Drafts 就会引导我们快速创建一个动作来调用对应的捷径。用 Drafts 调用捷径是常有的事，而有了这一条 URL Scheme，我们就可以用自动化的手段来向 Drafts 添加捷径了。例如，我们可以把这个过程制作成捷径：<br><img src="/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84/new-ani.gif" alt="用捷径快速添加捷径"></p><p>这是 Drafts 官方论坛提供的一条捷径，运行后可以从你已有的捷径中选择一条来直接添加到 Drafts。<br>你可以 <a href="https://www.icloud.com/shortcuts/bbcafbdca9324a8d8a8d4306de8121bb" target="_blank" rel="noopener">点击这里</a> 安装这条捷径。 </p><h2 id="一些其他更新"><a href="#一些其他更新" class="headerlink" title="一些其他更新"></a>一些其他更新</h2><p>除了工作区新增了更丰富的自定义能力以外，Drafts 从 5.4 版本到如今，还有不少其它变化：</p><h3 id="草稿列表的-All-标签页回归了"><a href="#草稿列表的-All-标签页回归了" class="headerlink" title="草稿列表的 All 标签页回归了"></a>草稿列表的 <code>All</code> 标签页回归了</h3><p>在 Drafts 4 中，草稿列表除了 <code>Inbox</code>、<code>Flagged</code>、<code>Archive</code>、<code>Trashed</code> 这四个标签页以外，还有一个 <code>All（全部）</code> 标签页。在Drafts 5 的早期版本中，这个标签页不知为何被移除了。<br>在 5.6 版本中，这个标签页又回来了。有了这个标签页，我们就可以同时浏览 <code>Inbox</code> 和 <code>Archive</code> 这两个标签页中的内容了。我觉得一个比较理想的使用场景应该是：我们正好在处理与某个特定主题相关的事情，例如写一份关于 A 产品的报告。这时在 <code>Inbox</code> 里可能有不少关于 A 产品的草稿，同时在 <code>Archive</code> 里又有大量已经存档的资料。这个时候我们只需要在搜索栏中输入 A 产品的名字，然后切换到 <code>All</code> 这个标签页，就能从容浏览所有相关的信息。</p><h3 id="支持更进阶的-Markdown-语法"><a href="#支持更进阶的-Markdown-语法" class="headerlink" title="支持更进阶的 Markdown 语法"></a>支持更进阶的 Markdown 语法</h3><p>在 5.5 版本中，Drafts 更新了对 MultiMarkdown 和 Github Markdown 语法的支持。<br>Drafts 先前仅支持原生的 Markdown 语法，因而能实现的功能极为简陋——甚至于不支持脚注、删除线等语法的高亮。MultiMarkdown 为 Drafts 的标记能力带来了一次飞跃，不仅是脚注等一众语法能够正确地高亮了，我们还获得了一套强大的标注语法：Critic Markup。<br>如果你是 Ulysses 用户，你一定不会对这套语法感到陌生。<a href="http://criticmarkup.com/users-guide.php" target="_blank" rel="noopener">Critic Markup</a> 是一套用于对纯文本进行标注的语法，通过使用各种不同的语法标记，我们可以用纯文本来表示添加、删除、替换等操作。<br><img src="/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D%E6%AC%A1%E5%8A%A0%E5%BC%BA%EF%BC%8C%E5%AF%B9%E6%8D%B7%E5%BE%84%E6%94%AF%E6%8C%81%E6%9B%B4%E5%AE%8C%E5%96%84/new-IMG_0982.jpg" alt="Drafts 对 CriticMarkup 的高亮支持"></p><p>可以说，CriticMarkup 是再适合 Drafts 不过了。<strong>一方面，Drafts 提供的自动化支持让语法复杂的 CriticMarkup 变得易于输入。</strong>论坛上已经有了不少相关的资源，如果你有兴趣尝试这套标记，<a href="https://actions.getdrafts.com/a/1RL" target="_blank" rel="noopener">这个动作</a>就可以帮助你快速输入标记符号。 <strong>另一方面，Drafts 正需要一些能够加强写作功能的特性，而 CriticMarkup 恰好能提供这一点。</strong>虽然 Drafts 一直以来都被我们称作是速记工具，但它确实也能用来写作。曾经，Drafts 面对的阻碍在于：它虽然在速记方面占尽优势，但谈及长篇写作，却并没有太多值得称赞的亮点。如今有了这套标记语法的加持，再加上各种各样的自动化动作，Drafts 的底气已经相当充足了，我私以为在长篇写作方面完全值得一用。<br>至于 Github Markdown 语法，它更多注重的是与 Github 功能的交互，例如代码高亮、@特定用户等，而这些都是 Drafts 在本地无法渲染的，因此我觉得这暂时不会特别实用。如果你对这种语法感兴趣的话，我这里也有个<a href="https://getdrafts.com/actions/examples/downloads/Post-Gist-to-Github.draftsAction" target="_blank" rel="noopener">小玩具</a>，可以帮你把当前草稿发布到 Github Gist。<br>相关阅读：<br><a href="https://sspai.com/article/51943?series_id=70" target="_blank" rel="noopener">Drafts、TextExpander、Pixelmator Pro、Instapaper | 奏折 01</a><br><a href="http://criticmarkup.com/users-guide.php" target="_blank" rel="noopener">CriticMarkup User’s Guide</a></p><h3 id="模板标签-line-支持反向获取文本"><a href="#模板标签-line-支持反向获取文本" class="headerlink" title="模板标签 [[line]] 支持反向获取文本"></a>模板标签 <code>[[line]]</code> 支持反向获取文本</h3><p>在 Power+ 1.0 中，Hum 曾经介绍过 <code>[[line]]</code> 这个模板标签的用法：我们可以通过这个标签获取 Drafts 的特定几行，例如用 <code>[[line|2]]</code> 表示草稿第二行的内容，用 <code>[[line|3..]]</code> 表示草稿第三行及之后的内容，等等。<br>这个模板标签在 5.5 版本的更新中得到了加强：现在我们可以用负数来从草稿的末尾向前获取文本了。例如使用 <code>[[line|-1]]</code> 就可以表示草稿最后一行的内容；使用 <code>[[line|2..-3]]</code> 则可以表示草稿的第二行至倒数第三行的内容。<br>相关阅读：<br>[通过 Bear 来认识 Drafts 的 [[line]] 用法](<a href="https://sspai.com/article/41954?series_id=9" target="_blank" rel="noopener">https://sspai.com/article/41954?series_id=9</a>)</p><h2 id="小结与展望"><a href="#小结与展望" class="headerlink" title="小结与展望"></a>小结与展望</h2><p>在这次的更新中，Drafts 主要带来了工作区的进一步强化，以及一条新的 URL Scheme。此外，在之前的版本更新中，Drafts 还支持了新的高亮语法，并作了大量细节上的优化。<br>我在本文开篇提到 Drafts for Mac 已经初具雏形了，这款强大的笔记应用即将正式来到 Mac 平台。目前的 Drafts for Mac 仅实现了草稿列表、工作区等功能，但还不支持自定义动作。这里的一部分原因是由于 Mac 系统和 iOS 系统有一定的区别，因此不少动作的移植需要很大的工作量。不过我觉得更重要的一点是：相比封闭的 iOS 系统，Mac 要开放得多。我们有很多办法在 Mac 上玩出花样：Keyboard Maestro、LaunchBar、Apple Script……自定义动作在 Mac 上是否有存在的必要，这一点仍值得商榷。但可以肯定的是，无论 Drafts for Mac 最终版本支持自定义动作与否，我们都能找到办法，让它给我们带来更多效率。<br>值得在这里说明的是，Drafts 的 Mac 版本现在正在向 Drafts Pro 的订阅用户开放测试。如果你是 Drafts 的长期用户，手上又正好有 Mac 电脑，你可以在 <a href="https://getdrafts.com/mac/beta/" target="_blank" rel="noopener">这个页面</a> 获取测试版本的 Drafts for Mac。不过测试版本毕竟存在着风险，请在尝鲜前务必做好备份。<br>让我们一起期待一个更为强大的 Drafts 吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/01/23/%E5%BA%94%E7%94%A8/Drafts%205.6%20%E6%9B%B4%E6%96%B0%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%86%8D
      
    
    </summary>
    
    
    
      <category term="Drafts" scheme="https://enoch2090.github.io/tags/drafts/"/>
    
  </entry>
  
  <entry>
    <title>《Legion》观看指南</title>
    <link href="https://enoch2090.github.io/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97.html"/>
    <id>https://enoch2090.github.io/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97.html</id>
    <published>2018-09-01T16:00:00.000Z</published>
    <updated>2020-01-01T05:52:45.107Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage.tiff" alt></p><blockquote><p>Welcome to madness.</p></blockquote><p>今年六月，Fx 电视台的 X 战警衍生剧集《Legion》（中文译名为《大群》）第二季完结了，同时第三季续订的消息也传了出来。这部剧的第一季在去年上映后口碑出现了两极分化的现象，有人认为它晦涩难懂，也有人对它采取的表现手法大加赞赏。批判这部剧的观点通常是：故弄玄虚、节奏拖沓。这些观点并非是空穴来风，Legion 确实是一部相当独特的作品，这部剧有着不少在其它影视作品里看不到的特征。就这些特征而言，我觉得它反而是一部值得去欣赏的作品。<br>Legion 讲的是 X 教授的儿子，David 的故事。David 是一个非常强大欧米伽级变种人，也是一个严重的多重人格症患者，能够吸收他人的意识到自身。<br>在关心 David 的故事之前，我们先来看看 Legion 的导演吧。</p><h2 id="从-Noah-Hawley-说起"><a href="#从-Noah-Hawley-说起" class="headerlink" title="从 Noah Hawley 说起"></a>从 Noah Hawley 说起</h2><p><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/0B4653D3-D7F7-4A16-9840-09E51F4E965D.jpeg" alt="Noah Hawley"><br>Legion 的导演是<a href="https://en.m.wikipedia.org/wiki/Noah_Hawley" target="_blank" rel="noopener">诺亚·霍利（Noah Hawley）</a>，一个被誉为「电视界的库布里克」的奇才，著名的电视剧 Fargo（《冰血暴》）也是他所导演。Fargo 虽然受到「现实事件改编」这一设定的局限，因而不及 Legion 这般奇幻诡谲，但我们仍能在画面和故事的背后看见导演的异想天开。Noah 似乎很擅长魔幻现实主义的手法，这一点在三季的 Fargo 中是体现得很明显的。到了 Legion，讲的本就是一个变种人的故事，Noah 的魔幻风格就更加一发不可收拾了。<br>更为关键的是，Legion 讲的不是一个传统意义上的故事，这也是我非常喜欢这部剧的原因。在第二季最终集播出后，诺亚接受了<a href="http://vulture.com" target="_blank" rel="noopener">Vulture</a>的采访。在采访中他这样说道：</p><blockquote><p>对我来说，这整部剧始于这样一个想法：我能在这个体裁中做些什么？这个想法的出现甚至先于角色的选定。我觉得，如果这部剧讲的是一个某种程度上的超级恶棍的故事，那会很有趣。</p></blockquote><p>那确实很有趣，因为 Legion 最终确实讲出了一个与众不同的故事；甚至可以说，这部剧所讲述的东西已经逐渐地超越了故事本身。</p><h2 id="Legion：超越电视剧的电视剧"><a href="#Legion：超越电视剧的电视剧" class="headerlink" title="Legion：超越电视剧的电视剧"></a>Legion：超越电视剧的电视剧</h2><p>私以为，Legion 是一部超越了电视剧意义的作品。从它的各个方面，你都能感觉到导演似乎有一些想要表达的想法，这些想法被融入画面、配乐、剧情和剪辑中，变得支离破碎而难以辨认。</p><h3 id="精心布局的画面"><a href="#精心布局的画面" class="headerlink" title="精心布局的画面"></a>精心布局的画面</h3><p>说 Legion 的画面不是精心安排的，恐怕都没有人会相信。<br><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/Image%202018-6-15%20%E4%B8%8B%E5%8D%8810-44.png" alt><br>举例来说，第二季第二集的这幅画面，描绘了 David 出现在 Astral Plain 的景象。天空层云密布，带来高亮的同时又滋生出压抑感；地面上是一片一望无际的草原，枯黄的颜色与天空的灰白相映，打造出一种颇为梦幻的氛围。在这个梦幻之地，大卫缓缓起身，空气里弥漫着一种古怪的压抑，宛如暴风雨前的宁静。突然响起一阵铃声，循着声音他走向不远处的一个占卜台，那里并没有人，桌上摆着一个水晶球。随后镜头缓缓从占卜台后侧掠过……不能再说下去了。<br>除却色彩，画面的内容本身也相当有意思。「夏天岛」与「三部」这两个地方的装潢完全不似寻常的军事基地：五彩的墙壁、装饰典雅的餐厅和房间。<br>这些不合常理的装潢从某种意义上来说，也是在尝试着表达一些隐晦的含义。例如三部的装饰中大量使用了六边形的元素，而六边形具有控制的含义，这也在间接地影射三部的人意识或许是受到影响的。<br><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage-1-7764319.tiff" alt><br><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage-2.tiff" alt><br>总结来说，我们先抛开画面元素的隐喻不谈，这部剧的画面本身看起来真的很舒适。无论是精心调配的颜色还是绝无冗余的元素，在如今的一众美剧之中，Legion 的画面绝对是顶尖水平。<br><strong>观看建议01：多关注画面的细节，推荐经常暂停、倒带来寻找值得关注的细节。</strong></p><h3 id="奇异吊诡的剧情"><a href="#奇异吊诡的剧情" class="headerlink" title="奇异吊诡的剧情"></a>奇异吊诡的剧情</h3><p>Legion 的第一季主要讲述了大卫在和头脑中的恶魔抗争的故事，这一季的剧情已经相当古怪。当镜头移动时，镜头外也许已经出现了一个本不在那里的人；任何事物都可以是隐隐约约、介于存在于消失之间；同时，大量完全不合常理的人与物又会不时出现。你会看到各种不合常理的事情发生，而想要享受这部剧的最好方法就是，不必过于纠结那些看似不正常的东西。你看到的毕竟是一个强大的、拥有修改现实能力（且精神不稳定）的欧米伽级变种人的世界，在这里一切都可以是虚幻的；有时你甚至无法确定当前的剧情是发生在现实世界还是精神幻境。<br><strong>观看建议02：任何逻辑上说不通的事情也许都是合理的。可以在意细节，但不要纠结于它们。</strong><br>到了第二季，随着剧情展开速度变慢，Legion 更加显出在剧情这方面的独特。除了主线故事的展开，每集都会穿插一个心理故事。这个故事会引导你去思考一些特定的心理现象：意识、幻觉、心理上的传染……随后的剧情发展又回逐渐印证这个心理故事，最终去佐证它。我觉得在电视剧中安排这样的内容形式，这种行为本身就是一种艺术手法。如此一来，观看这部作品的意义就不在于剧情本身，而在于去享受被表面上的错乱牵引着思考事物本质的过程，这种错乱中隐含的逻辑正是 Legion 的魅力所在。<br><strong>观看建议03：多去关注心理故事想表达的内容，在随后的剧情中试着去找和这个故事相印证的内容。</strong></p><h3 id="独立于内容的手法"><a href="#独立于内容的手法" class="headerlink" title="独立于内容的手法"></a>独立于内容的手法</h3><p>在多数影视作品里，我们看到表现手法是为内容而服务的。例如当需要呈现一场追逐戏时，画面里忽明忽暗的光线、由远及近的镜头等都是为了烘托紧张感而采用的手法。但是在 Legion 中，我们时常能看到手法独立于内容的场景，而这也是它独一无二的原因之一。<br>这种为手法服务的内容在第一季的第七集达到了顶峰。这一集中有很大一部分内容没有声音而仅有配乐，采用了如同上个世纪默片一般的形式：<br><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage-3.tiff" alt><br>一片黑白混沌的走廊尽头，Lenny（？）突然从转角冒出。随后的画面用字幕大声喊出：「怪物来了！」<br><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage-4.tiff" alt><br>音乐声连续未停，画面转为走廊中的 David，与此同时画面又转为彩色。<br><img src="/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage-5.tiff" alt><br>这一段的画面就这样在黑白和彩色间来回切换<a href="画面颜色的含义在看到这一集时读者就会明白了。">^1</a>，不变的是默片一般的形式。人物的喜怒哀乐以这种略显夸张的形式表现出来，有一股不真实的质感，却正好与本片的主题相契合。<br><strong>观看建议04：有一些片段真的很惊艳，看到自然就意识到了。倒回去多看上几遍吧。</strong></p><h2 id="怪异电视作品的黄金时代"><a href="#怪异电视作品的黄金时代" class="headerlink" title="怪异电视作品的黄金时代"></a>怪异电视作品的黄金时代</h2><blockquote><p>If everything is weird then nothing is weird.        ——Noah Hawley</p></blockquote><p>Legion 的背后，我们看到的是一个怪异电视作品的黄金时代。<br>什么是怪异电视作品？这类作品不似传统电视剧的叙事结构和表达方式，往往采用看起来怪异的手法去展示内容。《超感猎杀》断裂的故事结构、《大群》不可靠的叙事视角、《美国众神》将神话与现境混合叙述的构造……这些都是尝试着挑战传统线性叙事方式的作品。<br>这样的作品的产生是有多方面因素的。就我观察下来，主要有三点：</p><ol><li><strong>行业竞争。</strong>Noah 在 The Rollingstone 采访的一篇文章中提到，「Everyone is making all these shows and the only way to distinguish yourself is to make something different and better, which makes TV the artist’s market.」</li><li><strong>观众需求。</strong>一方面，现在的观众对这样奇特的作品有更高的接受度；另一方面，厌倦了那些传统影视套路的观众也急需一些不一样的东西。</li><li><strong>有人买单。</strong>这大约也是有高层意识到这类作品的重要性。在前两条因素的支持下，只要有电视台肯签这类作品，就一定会有人把它们做出来。<br>不过值得深思的是，走怪异风格的作品如今是越来越多了。Noah 自己曾说：「如果所有东西都很奇怪，那就没什么东西是奇怪的了。」他这话当然是针对作品而言的，但放到整个影视圈大概也适用。怪异的电视作品确实很惊艳，但当它们泛滥的时候，恐怕那种惊艳的感觉也就消散了。<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2>陆陆续续拖了好几个月，终于把这篇文章写完了。<br>我自己也意识到，作为一篇纯安利性质的文章，这篇文章是不合格的。我可能多说了两句没什么意义的话，所以就和看 Legion 一样，也别太把这篇文章当真。另外就是，我自己也不是专业研究影视的人，说错话也很正常，欢迎指正。<br>写这篇文章其实写得挺难受的，囿于安利这一初衷，很多关于剧情本身的想法说不出来，怕剧透。这也就造成很多分析说到一半只能停下，全文跳崖无数回。不过真要正儿八经分析起来，那就是下一篇文章（未必存在）的事了。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/09/02/%E6%96%87%E5%8C%96/Legion%20%E8%A7%82%E7%9C%8B%E6%8C%87%E5%8D%97/DraggedImage.tiff&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcom
      
    
    </summary>
    
    
    
      <category term="影评" scheme="https://enoch2090.github.io/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>克服睡眠焦虑</title>
    <link href="https://enoch2090.github.io/2018/07/07/%E6%95%88%E7%8E%87/%E5%85%8B%E6%9C%8D%E7%9D%A1%E7%9C%A0%E7%84%A6%E8%99%91.html"/>
    <id>https://enoch2090.github.io/2018/07/07/%E6%95%88%E7%8E%87/%E5%85%8B%E6%9C%8D%E7%9D%A1%E7%9C%A0%E7%84%A6%E8%99%91.html</id>
    <published>2018-07-06T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:05.237Z</updated>
    
    <content type="html"><![CDATA[<p>我一直是那种比较难入睡的那种人，日常不躺个二十几分钟是睡不着的。因而电子设备对我睡眠的影响相当大，假如睡前长时间看手机，我躺下直到入睡的时间可能会超过四十分钟。Night Shift 这一功能的确对我的情况有帮助，但效果仍不理想。上高中以后我的睡眠质量就变得很差劲，这大概是因为我不习惯学校那种大清早起床的作息，导致整个人的作息有点紊乱，甚至在睡不着的时候会感到相当焦虑。以下是我这三年来为了克服睡眠焦虑想的种种措施。</p><h2 id="解决电子设备对睡眠的影响"><a href="#解决电子设备对睡眠的影响" class="headerlink" title="解决电子设备对睡眠的影响"></a>解决电子设备对睡眠的影响</h2><p>对于电子设备带来的影响，我目前的解决方案是尽量避免在睡前看手机。这包括两方面：</p><ol><li><strong>在家</strong>：iOS 的就寝功能有一个提前十五分钟的入睡提醒。收到提醒以后，我就放下手机，看一会纸质书然后睡觉。有时我也会用 Kindle 看书，但我会特地把它白色的背光调到较暗的等级，然后用暖色光线的床头灯辅助照明。</li><li><strong>在学校</strong>：在学校里没有床头灯这种暖色调的光线条件，所以我的选择是收到就寝提示以后，躺在床上听一会播客。一般不会发生听到一半我睡着的情况，但是反正 Castro 有睡眠定时也无所谓。<h2 id="进一步改进睡眠质量"><a href="#进一步改进睡眠质量" class="headerlink" title="进一步改进睡眠质量"></a>进一步改进睡眠质量</h2>高三时我越发重视调整作息这件事，最后大致总结出以下几点：</li><li><strong>下午三点之后绝不碰含大量咖啡因的食物和饮品。</strong>对我来说这真的不是夸张，有一回我下午喝了杯冷萃咖啡，结果到凌晨四点都没睡着……</li><li><strong>下午或者晚上尽量抽空做一些运动</strong>，打篮球或者跟着 Keep 练练肌肉都行。</li><li>中午可以睡午觉，<strong>但是白天绝不能仅仅因为困就睡太多</strong>。<h2 id="智能手环与睡眠"><a href="#智能手环与睡眠" class="headerlink" title="智能手环与睡眠"></a>智能手环与睡眠</h2>这几年我一共用过两个智能手环：<br>第一个是 Weloop Now 2。这款手环最大的优点就是轻，只有十几克，晚上戴着不会有不适感。它能大致记录你的睡眠时间，包括深度睡眠、浅睡等，而且是自动记录的，无需手动开关。<br>第二个是 Watch Series 3。Watch 相较其它各种手环最大的优势就在于和手机之间能完全自动同步，查看数据方便；此外 Autosleep 也确实很好用。不过我的确也意识到一个问题：就算你知道了自己睡眠的详细情况，你也无法根据它作出什么精确的自我调整，能做的无非就是大致改变作息罢了。就这个角度来说，睡眠记录之于改善睡眠，更多可能还是心理上的安慰作用。不过 Watch 还有个很不错的功能：呼吸。睡不着的时候做三分钟深呼吸，人会变得放松一些，这倒是一个很不错的助眠手段。</li></ol><p>本文整理自我在少数派<a href="https://sspai.com/article/45499?series_id=9" target="_blank" rel="noopener">第44周Power+预告</a>下的评论。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我一直是那种比较难入睡的那种人，日常不躺个二十几分钟是睡不着的。因而电子设备对我睡眠的影响相当大，假如睡前长时间看手机，我躺下直到入睡的时间可能会超过四十分钟。Night Shift 这一功能的确对我的情况有帮助，但效果仍不理想。上高中以后我的睡眠质量就变得很差劲，这大概是
      
    
    </summary>
    
    
    
      <category term="π" scheme="https://enoch2090.github.io/tags/%CF%80/"/>
    
  </entry>
  
  <entry>
    <title>Drafts 更新到 5.2 版本，你需要了解这些</title>
    <link href="https://enoch2090.github.io/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B.html"/>
    <id>https://enoch2090.github.io/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B.html</id>
    <published>2018-07-01T16:00:00.000Z</published>
    <updated>2020-01-03T02:30:32.410Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/Image%202018-6-22%20%E4%B8%8B%E5%8D%885-54.jpeg" alt><br>自从 Drafts 发布 5.0 大版本并转为订阅制以来，几乎可以明显地感觉到它的更新速度和修复问题的效率都在提升。上周 Drafts 发布的 5.2 版本可以说是自 Drafts 5 发布以来最大的一次小版本更新，这次更新加入了几个很有用的功能，并与之前的功能构成了一个更为完整的体系。</p><h2 id="新增「导航」功能"><a href="#新增「导航」功能" class="headerlink" title="新增「导航」功能"></a>新增「导航」功能</h2><p>这是一个相当重要的更新，Greg 特地在 Drafts 的官网为这个功能发布了一个<a href="http://getdrafts.com/editor/navigation" target="_blank" rel="noopener">说明页面</a>，由此也可以看出这个功能的重要性。在这个页面中有一张说明图，我制作了一个中文版本。你可以先参考一下：<br><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/809E6956-A0AB-44C5-8A59-128F427273F9.jpeg" alt="「导航」功能说明"><br>你可以在右上角点击<code>▼</code>进入，或使用快捷键<code>⌘ + \</code>打开导航窗口。在导航窗口中，你可以：<br>1.<strong>在当前草稿中导航。</strong>这一导航模式识别特定的符号，如 Markdown 中的标题<code>#</code>、JavaScript 中的函数<code>function name(){}</code>、Taskpaper 中的<code>Project name:</code>等格式，并以此生成当前草稿的导航目录。点击其中任意一级条目会把光标移动到对应位置处。<br><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/Image%202018-6-22%20%E4%B8%8B%E5%8D%882-19.png" alt><br>在 iOS 平台上的笔记应用中，这一功能可以说是 Drafts 独有的了。这一功能的出现具有多重含义：它意味着 Drafts 从此可以作为一个长篇写作工具来使用；此外也意味着 Drafts 具有了竞争 Taskpaper iOS 客户端的实力；甚至于你也可以用它来写 JavaScript 代码了。在此前，Drafts 也能被用来做这些事，但是如今有了导航功能，Drafts 在被用作这些用途时才是完整的。在更新后，我开始逐步尝试着用 Drafts 来取代 Ulysses 在我写作工作流中的一部分位置。假如我准备撰写一篇不会插入很多图片的文章，我会先在 Drafts 中起一条草稿作为大纲，然后再新建另一条草稿作为正文。<br>2.<strong>在最近的草稿间导航。</strong>这一功能是草稿列表的延伸，可以快速帮你找到最近打开过的草稿。<br>另外值得一提的是，导航窗口对于外接键盘的支持很完美。你可以：</p><ul><li>使用<code>⌘ \</code>打开导航窗口。</li><li>使用键盘的上下键在列表中上下移动。</li><li>使用键盘的左右键切换导航的位置（当前草稿/最近草稿）</li><li>使用<code>return</code>键确认。<br>对外接键盘的支持是 Drafts 一贯的风格。就我个人尝试下，仅使用输入文字、运行动作等常规功能时，我完全可以双手不离开键盘。<h2 id="完成动作后为草稿指定标签"><a href="#完成动作后为草稿指定标签" class="headerlink" title="完成动作后为草稿指定标签"></a>完成动作后为草稿指定标签</h2>我们知道，Drafts 支持对动作进行设置，对一条草稿运行这个动作后选择将这条草稿存档或删除。这一功能在任意一个动作的设置选项中可以找到。</li></ul><p><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/ECE6E49B-1BC4-4821-AACA-AC550C6A48A5.jpeg" alt="完成动作后指定标签"></p><p>现在，除了原先支持的几个选项，Drafts 还支持在运行动作后为草稿指定一个或多个标签。这也是很重要的一个功能，它进一步发掘了 Drafts 5 新增的标签系统之潜力。<br>举例来说，Drafts 中一个非常常见的动作——发送推特——就可以用指定标签这一新功能加以改进。在动作列表中，找到 Tweet 这个动作，右滑并选择「Edit」打开动作设置选项。随后找到「AFTER SUCCESS」这一项，在「After success」处选择「Archive」，并在「Assign tags」处填入「tweet」。保存后运行这个动作，在推特发送成功后，就会将这条草稿存档并打上「tweet」的标签。你可以<a href="https://actions.getdrafts.com/a/1La" target="_blank" rel="noopener">点击此处</a>获取这个动作。<br>以我自己为例，我的博客是放在<a href="http://bitcron.com" target="_blank" rel="noopener">Bitcron.com</a>上的，这个平台支持与 Dropbox 进行双向同步：在发布文章时，我只需要在 Drafts 里写好文章，用动作将文件发送到 Dropbox 的指定文件夹即可。现在，我可以设置让这个动作运行完成后为草稿打上「blogpost」的标签，这样在本地留有一份存档，也方便我快速查找和修改。当然，我也更希望这个运行后打上标签的行为在将来支持更多的自定义成分，例如可以在运行动作时从数个标签中选一个或多个作为这条草稿的标签，这样能使分类更细致。<br>事实上，类似这两个事例地，但凡是运行从 Drafts 中分享文本到其他地方的动作，我们都可以尝试着加一步添加标签。甚至于，我们可以制作一个步骤为空的动作，仅设置运行后添加标签这一项，专门用作常用标签的快捷键。<br>总而言之，指定标签的这个新功能与原先的标签系统构成了很好的呼应，让 Drafts 的整理和检索功能得到了进一步增强。如果你在尝试用 Drafts 作为一个资料库，那你千万不能错过这个功能。</p><h2 id="载入工作区和动作组"><a href="#载入工作区和动作组" class="headerlink" title="载入工作区和动作组"></a>载入工作区和动作组</h2><p>如果说前面提到的两条更新是大部分人都用得到的，那么最后这一条就比较 geek 了。概括来说，你现在可以用自动化的方式让 Drafts 载入工作区和动作组。<br>首先回顾一下工作区和动作组的概念吧。<strong>工作区本质上是一种过滤机制，通过搜索关键字和特定标签这两种过滤条件，4在工作区中只显示符合条件的草稿。</strong>Drafts 本身的收件箱和存档箱是将所有草稿放在一起的，不存在文件夹之类的分类机制。但是通过工作区这一功能，我们得以在 Drafts 中将不同内容的草稿隔离开来，创造一个更为专注的工作环境。<br><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/C8018324-AC96-41C9-8E6D-704F139F01E7.jpeg" alt="载入工作区和动作组"><br><strong>而动作组，顾名思义即是由一个或多个动作形成的组。</strong>Drafts 5 新增了对动作组的设置，你可以一次性设置一个动作组中所有动作的属性、是否在键盘扩展条显示等，也可以直接通过分享动作组的方式来分享整套动作。<br>自工作区这个功能推出以来，就一直有把工作区与动作组结合，通过切换的方式打造不同工作环境的用法。当然，原先工作区的切换过程还是比较繁琐的：首先滑动调出草稿列表，再在列表右上角打开工作区选项，最后选择工作区。<br>在这次更新后，我们有了更为强大的工具。这次更新的自动化载入方式包含两方面：<br>1.<strong>新增了用于载入动作组的 URL Schemes。</strong>其参数如下：<br><code>drafts5://x-callback-url/loadActionGroup?name=NAME</code><br>这条 URL Scheme 用于打开 Drafts 并在右侧的动作列表载入指定的动作组，其中<code>NAME</code>处填入载入的动作组名字。如果在 Drafts 内用动作打开这条 URL Scheme，效果就是直接载入这个动作组。<br><code>drafts5://x-callback-url/loadKeyboardActionGroup?name=NAME</code><br>这条 URL Scheme 则用于打开 Drafts 并在键盘扩展条上载入指定的动作组。<br>另外值得一提的是先前与工作组一起推出的用于载入工作组的 URL Scheme：<br><code>drafts5://x-callback-url/workspace?name=NAME</code><br>这条 URL Scheme 用于打开 Drafts 并载入指定的工作区。和新推出的这两条 URL Scheme 结合，我们就可以用自定义动作来打造一套工作组切换器。这套切换器由八个动作组成，其实现的效果为：通过按下<code>⌘ + 2</code>至<code>⌘ + 9</code>的组合键（<code>⌘ + 1</code>与<code>⌘ + 0</code>被 Drafts 自己的功能占用了），可以快速切换当前的工作组与键盘扩展条，实现在不同工作状态下的快速切换。这个创意来自 Drafts 论坛里的<a href="https://forums.getdrafts.com/u/pdavisonreiber" target="_blank" rel="noopener">pdavisionreiber</a>，我对他分享的动作组进行了修改，增加了载入键盘扩展条的功能。来看看效果：<br><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/Image%202018-6-25%20%E4%B8%8B%E5%8D%884-39.gif" alt="一个简单的工作组切换器"><br>你可以<a href="https://actions.getdrafts.com/g/1L0" target="_blank" rel="noopener">点击此处</a>获取我修改过的工作组切换器，或<a href="https://actions.getdrafts.com/g/1HZ" target="_blank" rel="noopener">点击此处</a>获取原版。假如你不使用外接键盘，你也可以试着把这套动作设置到键盘扩展上来使用。<br>这个切换器是非常实用的，以我自己为例，我的 Drafts 里会出现各种内容，在需要集中做一件事情的时候确实会有干扰。在设置好这套切换器之后，假如我想用 Drafts 规划接下来想做的事，我就按<code>⌘ + 2</code>切换到任务管理的工作区，这里仅显示内容包含「task」的草稿，同时切换到一套能快速输入任务管理系统中各种标签、截止时间等内容的键盘扩展。最近几个月我一直在写 Drafts 相关的文章，因此我将<code>⌘ + 3</code>设置为切换到「Drafts」工作区，这里只显示标签含「drafts」的草稿，同时切换到一套文字编辑用的键盘扩展。此外鉴于我最近在尝试用 Drafts 长篇写作，我将<code>⌘ + 4</code>设置为仅显示含「blogpost」的草稿。前面说了工作区的好处，这套切换器的意义就在于它让切换工作区不再是一个因为步骤繁琐而变得可有可无的操作，而是真正让工作区能切实给我们带来效率。<br>2.<strong>新增了用于载入工作区和动作组的 JavaScript 函数。</strong>分别为：<br>    app.loadActionGroup(group)<br>    app.loadKeyboardActionGroup(group)<br>    app.applyWorkspace(workspace)<br>这些语句用法本质上和它们的 URL Schemes 版本是一样的，只不过 JavaScript 的版本可以配合其他代码，根据个人需求实现一些更为复杂的应用。在此不多叙述。<br>另外还有用于控制草稿列表与动作列表显示与隐藏的函数：<br>    app.showDraftList()<br>    app.hideDraftList()<br>    app.showActionList()<br>    app.hideActionList()<br>如果你有开着草稿列表进行工作的习惯，也可以尝试着把这些函数加入你的动作里。</p><h2 id="其他更新"><a href="#其他更新" class="headerlink" title="其他更新"></a>其他更新</h2><p>除了上面叙述的这几条，Drafts 自发布以来还积累了一些其他值得一提的更新，在此一并介绍：<br>1.在草稿列表中对任一草稿长滑动可以将其存档或删除。具体行为是存档还是删除可以在工作区里面设置。在 5.0.4 版本加入。<br><img src="/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E8%BF%99%E4%BA%9B/Image%202018-6-22%20%E4%B8%8B%E5%8D%882-55.gif" alt><br>2.原先 Drafts 4 支持的 iMessage APP 回归了。在 5.0.4 版本加入。<br>3.动作中的步骤现在可以复制或暂时禁用，方便编写动作时的调试过程。在 5.1.0 版本加入。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>在 Drafts 5 刚上架时，我就说过，这个应用正在变得越发现代化和强大。自发布以来的这几个月里，Drafts 仍然在不断地推出新的功能，完善它自身的体系。从某种意义上说，这也大约是订阅制正面效果的一种体现吧。<br>你可以在 App Store 下载 Drafts 5。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/07/02/%E5%BA%94%E7%94%A8/Drafts%20%E6%9B%B4%E6%96%B0%E5%88%B0%205.2%20%E7%89%88%E6%9C%AC%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6
      
    
    </summary>
    
    
    
      <category term="Drafts" scheme="https://enoch2090.github.io/tags/drafts/"/>
    
  </entry>
  
  <entry>
    <title>谈谈订阅制</title>
    <link href="https://enoch2090.github.io/2018/06/15/%E8%A7%82%E7%82%B9/Date2018-06-15.html"/>
    <id>https://enoch2090.github.io/2018/06/15/%E8%A7%82%E7%82%B9/Date2018-06-15.html</id>
    <published>2018-06-14T16:00:00.000Z</published>
    <updated>2019-01-06T11:00:06.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="谈谈订阅制"><a href="#谈谈订阅制" class="headerlink" title="谈谈订阅制"></a>谈谈订阅制</h1><p>去年可以说是订阅制兴起的元年，著名的写作应用 Ulysses 转为了订阅制，引起一片哗然。随后我们看到包括 Drafts、Castro 等一众应用在内的各种知名应用都转为了订阅制。就网上目前的各种言论来看，订阅制并不被看好，本文我将尝试着为订阅制「正名」。</p><p>首先要澄清的是，作为一个各类应用的重度用户，我也不希望每年支出上百元的订阅费用来使用自己心爱的应用。但是仔细思考这背后的关系，却又不难发现，这笔「年费」的确存在它的意义；而想通这一层意义之后，我也渐渐接受了订阅的费用支出。</p><h2 id="定义订阅制"><a href="#定义订阅制" class="headerlink" title="定义订阅制"></a>定义订阅制</h2><p>要说订阅制，首先得弄清楚它的本质。表面上，订阅制就是按照一个固定周期（通常使用每月和每年这两种单位）向应用开发者支付一笔费用，来保证自己的使用权。订阅制不受人待见的原因就在这里：它不仅让用户支出更多，而且给人一种「这个应用不属于我」的感觉。换言之，采用订阅制的应用所出售的不再是像买断制那种一锤子买卖的商品，而是一个订阅者的权限随时会被收回的许可。<br>但是从本质上来看，订阅制不只是简单地定期交钱，订阅和订阅之间还有着差别，我这里想将所有的订阅分为两类。</p><ul><li>第一类是<strong>在线服务类订阅</strong>，诸如 Dropbox 的高级版、DayOne 的同步功能……这类订阅的意义更多是在于购买一种服务，在上面的例子里分别为：额外存储空间的使用权、在线同步功能的使用权。</li><li>第二类是<strong>本地功能类订阅</strong>，诸如 Bear 和 Drafts 的 Pro 版本。这类订阅的购买指向较为复杂，因为这些应用大多是以本地功能为主，开发者不会有运行云端服务所需的额外支出，故此这类订阅大多受人诟病。<br>不难发现，在线服务类订阅的本质，排除开发者获取的收入，在于弥补云端服务器的运营支出。而本地功能类订阅的本质就是持续为开发者提供定期收入。</li></ul><h2 id="用户有必要给开发者定期交钱吗？"><a href="#用户有必要给开发者定期交钱吗？" class="headerlink" title="用户有必要给开发者定期交钱吗？"></a>用户有必要给开发者定期交钱吗？</h2><p>有必要。开发应用是一个相当麻烦和复杂的过程，即使是一个已经完成开发的应用，定期的维护也很费事。举例来说，你有一个上架的应用 A，你认为开发完成后就可以放在 App Store，售价 25 元，一直这样出售下去。然而事情远比这复杂，一段时间后，苹果就要求这个应用必须进行 64 位系统的适配，否则就会将其下架。当你好不容易完成适配，iPhone X 上市了——为了让 iPhone X 用户用上你的应用 A，你又得为 iPhone X作适配。除此之外，更不用说应用还会时常发现开发时忽略的漏洞需要定期作修复，这些都要耗费精力。作为开发者，假如你只拿得到买断制出售的那 25 元——或者 68 元、98元，总归不会多到哪里去——那你很难保证自己有动力去维护这个应用。<br>这样看来订阅制，尤其是<strong>本地功能类订阅</strong>的意义就很明显了，<strong>它是用户为了应用能够持续更新、变得更好而交的一笔「众筹费」。</strong>这笔费用当然不能百分百保证开发者持续更新下去，但它确实让开发者和用户之间多了一层关系，也让用户多了一份保障。</p><h2 id="成功的订阅制和不那么成功的订阅制"><a href="#成功的订阅制和不那么成功的订阅制" class="headerlink" title="成功的订阅制和不那么成功的订阅制"></a>成功的订阅制和不那么成功的订阅制</h2><p>一提起订阅制，最有名的大概就是 Ulysses——它转型订阅制的方式并不那么厚道。Ulysses 采用的方案是下架了旧的买断制应用并用新的订阅制应用替换；同时停止旧应用的维护；如果不订阅则无法编辑文档。这就是做得不那么成功的订阅制，大约由于先前承诺过不会转为订阅制，Ulysses 团队的这一举动招来骂声一片。当然，尽管对此不满，该用的我们还是得用。<br>相较之下，我们也能看到一些在由买断制转为订阅制过程中做得比较成功的例子，著名播客应用 Castro 就是其中之一。更新 3.0 版本后，Castro 由买断制转为免费下载 + 付费订阅的收费模式，订阅 Castro Plus 可以获得 Trim Silence、Mono-Mix 等一系列额外功能。但是已经购买 2.0 版本的老用户会免费永久获得夜间模式、音效增强等 2.0 版本中已有的功能。这样老用户不会因此有所损失，同时又能带来新的收入，即是一种较为聪明的做法。<br>确实，类似 Ulysses 的应用会由于本身功能过于全面，难以一次带来大量具有吸引力的新特性，因此转换订阅制时就天生具有了一种劣势。不过私以为这样的更新还是存在更好的解决方案的，也还望开发者们在转换订阅制之前三思。</p><h2 id="重新审视订阅制"><a href="#重新审视订阅制" class="headerlink" title="重新审视订阅制"></a>重新审视订阅制</h2><p>我先前做过一个关于应用消费习惯的调查，得出的结果是：几乎在每一个年龄段，愿意消费应用内订阅的人都少于 20%。这对于开发者是一个不怎么友好的结果，从 Ulysses 在 App Store 骤降的评分也足以看出。我们需要重新看待审视订阅制的意义，重新理解这种新兴的付费方式：（大部分情况下）订阅制不是尝试着掏空你钱包的洪水猛兽，而是开发者赖以维持软件的一笔收入。因此，没必要在开发者宣布某某应用转成订阅制以后咬牙切齿、咒骂连连，天下不仅没有免费的午餐，不多付点钱你更别想吃上好的东西。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;谈谈订阅制&quot;&gt;&lt;a href=&quot;#谈谈订阅制&quot; class=&quot;headerlink&quot; title=&quot;谈谈订阅制&quot;&gt;&lt;/a&gt;谈谈订阅制&lt;/h1&gt;&lt;p&gt;去年可以说是订阅制兴起的元年，著名的写作应用 Ulysses 转为了订阅制，引起一片哗然。随后我们看到包括 Draf
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>记一次精力记录的尝试</title>
    <link href="https://enoch2090.github.io/2018/05/13/%E6%95%88%E7%8E%87/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%8A%9B%E8%AE%B0%E5%BD%95%E7%9A%84%E5%B0%9D%E8%AF%95.html"/>
    <id>https://enoch2090.github.io/2018/05/13/%E6%95%88%E7%8E%87/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%8A%9B%E8%AE%B0%E5%BD%95%E7%9A%84%E5%B0%9D%E8%AF%95.html</id>
    <published>2018-05-12T16:00:00.000Z</published>
    <updated>2019-12-30T16:44:52.918Z</updated>
    
    <content type="html"><![CDATA[<p>在 <a href="https://sspai.com/article/44392?series_id=9" target="_blank" rel="noopener">5 月 1 日的 Power+</a> 中，Hum 分享了一种用纸笔记录精力的方法。恰好我时常觉得自己的精力分配总是不均衡，于是就尝试了一下这种方法。<br>我建议在阅读本文之前先阅读这篇 <a href="https://sspai.com/article/44392?series_id=9" target="_blank" rel="noopener">Power+</a>。</p><h2 id="记录的方法"><a href="#记录的方法" class="headerlink" title="记录的方法"></a>记录的方法</h2><p><img src="/2018/05/13/%E6%95%88%E7%8E%87/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%8A%9B%E8%AE%B0%E5%BD%95%E7%9A%84%E5%B0%9D%E8%AF%95/Image%202018-5-6%20%E4%B8%8B%E5%8D%884-43.png" alt="Image 2018-5-6 下午4-43"><br>这张图片就是用来记录的模版。概括来说，这种方法是这样操作的：把这张模板打印出来，每隔一段时间，使用不同颜色的笔来代表不同身份做的事，填涂扇形图的格子来为自己上一个时间段的表现打分。举例来说，这是我其中一天的记录：<br><img src="/2018/05/13/%E6%95%88%E7%8E%87/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%8A%9B%E8%AE%B0%E5%BD%95%E7%9A%84%E5%B0%9D%E8%AF%95/Image%202018-5-13%20%E4%B8%8A%E5%8D%8812-24.png" alt="Image 2018-5-13 上午12-24"><br>我采用了和 Hum 相同的颜色标记：<br><strong>蓝色</strong>代表个人<br><strong>红色</strong>代表工作<br><strong>黑色</strong>代表学业<br>这天我正好在复习之后一天的一场考试，可以看到这一天的大部分格子都是涂成黑色的，也就是我几乎一整天都在忙复习的事情。</p><h2 id="一些我个人作出的调整"><a href="#一些我个人作出的调整" class="headerlink" title="一些我个人作出的调整"></a>一些我个人作出的调整</h2><p>Hum 原文给出的建议是使用纸笔作记录，这里部分摘录他的理由：</p><blockquote><ol><li>智能设备的干扰强。只要边上有手机，它就能吸收着你的注意力。</li><li>用智能设备记录时间其实不快捷。</li><li>智能设备上记录时间的工具多是以任务为单位。以任务为单位，就要求我们对一个任务的开始和结束有个明显的意识。但正常情况下我们是没这个意识的，需要另外培养。<br>因此，如果一个人刚刚对记录时间感兴趣，但是却用智能设备里的软件入门，他多半会感到阻力重重。如果有兴趣做时间管理，最开始用纸笔，每一个小时记一下之前一小时大概做了什么，在这之中找规律，上手会快很多。好在，精力管理这个领域还不算热，软件还没跟上，所以可以让我们有用纸笔记录的机会。<br>权衡一番之后，我决定把模板导入 Goodnotes 并使用 Pencil 来做记录。这样做的理由如下：</li></ol></blockquote><ol><li>使用 Goodnotes + Pencil 的实质就和使用纸笔一样，不会有太高的学习成本，记录起来同样方便，体验甚至优于普通纸笔。这就能涵盖所有「使用纸笔来代替智能设备上的软件进行记录」这一方法的优点；</li><li>我希望最终的记录结果能保存一份电子存档方便以后查看，而Goodnotes 能将记录导出为一个 PDF 文档，可以直接保存到印象笔记或 DEVONthink 并存档，免去了扫描这一步骤；</li><li>我的 iPad 上安装的应用，通知几乎都是关闭的，不存在吸收注意力的情况。这就规避了「使用智能设备进行记录」最关键的「注意力不集中」问题。<br>此外，我还希望通过一些关键数据的统计来得出更为有效的精力结论。从记录的第三天起，我决定开始关注一些数据，包括：</li></ol><ul><li><strong>当天的平均分数</strong>。这一数据用当天的精力总分除以工作的总小时数得到。这个数据看起来没什么用，但是它实际上能帮我掌握自己一周中的精力变化。</li><li><strong>某一天的平均分数与前一晚睡眠时长的比值。</strong>上高中以后我就一直觉得睡眠不足，加之我的睡眠时长也不是很规律（一般在 5 小时-8 小时之间，根据当天的安排而定），恰好有了条件来研究睡眠时长对第二天的精力究竟有着怎样的影响。</li><li><strong>喝过咖啡之后 3 小时的精力变化。</strong>我想研究一下咖啡因究竟对我的效率有着怎样的影响。</li></ul><h2 id="记录的结论"><a href="#记录的结论" class="headerlink" title="记录的结论"></a>记录的结论</h2><p>这里我打算以这一周较为典型的一天为例谈一谈我在这十天的记录中得到的结论。<br><img src="/2018/05/13/%E6%95%88%E7%8E%87/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%8A%9B%E8%AE%B0%E5%BD%95%E7%9A%84%E5%B0%9D%E8%AF%95/Image%202018-5-13%20%E4%B8%8A%E5%8D%8812-38.png" alt="Image 2018-5-13 上午12-38"><br>这是一个寻常的日子，因为在学校上课所以几乎一整天都是涂成黑色的「学业」。我之所以选取这一天，是因为这一天具有很多在这周的记录中出现的典型特征，就我的分析，这些特征包括：</p><ol><li>早上刚起床时精力不佳。这主要是由于学校规定早上要在 6 点 45 之前离开寝室，睡眠略不足造成的。</li><li>在喝过一杯咖啡之后，会有两到三个小时到精力旺盛期。这段时间基本上能保持专注地听课或者是做手头的事情而不分心。</li><li>在一段时间的专注之后，我必然会有一段时间精力不足，出现分心的现象。对我来说，这个时间大约在 40 分钟至 2 小时之间，视专注的思维强度而变。</li><li>下午 1 点至 2 点之间我一般会有些困，进而导致专注程度降低。<br>另外，就这一周记录的数据来看，我的精力还有如下的变化：</li><li>在周三达到最低，周一和周五最高。</li><li>可以观察到睡眠时间的增加有助于提高当天的精力。这当然是个显然的结论，不过比较有趣的是我发现当睡眠时间在 7 个小时左右（就我个人而言）时当天的平均分数与睡眠时间的比值达到最大，这也就意味着 7 小时的睡眠对我来说效益最高。这一数据还有待进一步观察。</li></ol><h2 id="关于记录的一些感想"><a href="#关于记录的一些感想" class="headerlink" title="关于记录的一些感想"></a>关于记录的一些感想</h2><p>首先要说的是，这的确是一个很不错的自我量化的方法。虽然记录的评分是带有主观色彩的，但是「效率」这件事本身就有其主观性，因此我觉得自己的主观性给分数带来的影响并不会对我评估精力变化带来太大的影响。<br>其次，我觉得我确实在这十天的记录里收获了几个结论。就我而言，我打算：</p><ol><li>每天吃完饭趴在桌子上睡一刻钟，尽量不让自己在下午犯困。</li><li>根据上午的安排，合理调整喝咖啡的时间，来达成效率最大化。</li><li>在长时间专注后，不必逼自己强行保持看似「认真」的状态，可以出去走走，活动一会。</li><li>周一和周二可以抽时间把周三的任务提前完成掉一些，周三可以去打打球放松一下。<br>以上是我的感想。很高兴能在 Power+ 里看见这些切实可行的直接或间接提高效率的方法，也希望这类培养效率思维的内容能经常出现。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 &lt;a href=&quot;https://sspai.com/article/44392?series_id=9&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;5 月 1 日的 Power+&lt;/a&gt; 中，Hum 分享了一种用纸笔记录精力的方法。恰好我时常觉得自
      
    
    </summary>
    
    
    
      <category term="π" scheme="https://enoch2090.github.io/tags/%CF%80/"/>
    
  </entry>
  
</feed>
